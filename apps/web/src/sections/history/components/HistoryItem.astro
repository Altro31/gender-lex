---
import ToggleButton from '@/components/ToggleButton.astro'
import { Button } from '@/components/ui/button'
import { Card, CardContent } from '@/components/ui/card'
import ModelBadge from '@/sections/analysis/components/ModelBadge.astro'
import type { Analysis, Request } from '@zenstackhq/runtime/models'
import { AlertTriangle, ChevronRight } from 'lucide-react'

interface Props {
    data: Pick<
        Request,
        'id' | 'createdAt' | 'originalText' | 'Analysis' | 'model'
    >
}

const { id, createdAt, originalText, Analysis, model } = Astro.props.data
---

<Card className="w-full group p-2">
    <CardContent className="px-2 sm:px-4">
        <div class="flex justify-between">
            <h3 class="text-sm font-medium">
                {new Date(createdAt).toLocaleDateString()}
            </h3>
            <ModelBadge model={model} />
        </div>
        <div class="space-y-2">
            <p class="text-xs sm:text-sm text-muted-foreground line-clamp-2">
                {originalText}
            </p>
            <div
                class="space-y-2 group-has-[#expander[data-state=on]]:h-0 overflow-clip transition-[height]"
            >
                <p class="text-sm">
                    <AlertTriangle
                        className="inline-block mr-1 h-4 w-4 text-yellow-500"
                    />
                    Términos sesgados:{" "}
                    {Analysis.biasedTerms.length}
                </p>
                <p class="text-sm">
                    <AlertTriangle
                        className="inline-block mr-1 h-4 w-4 text-yellow-500"
                    />
                    Metáforas sesgadas:{" "}
                    {Analysis.biasedMetaphors.length}
                </p>
                {
                    Analysis.additionalContextEvaluation.stereotype
                        .presence && (
                        <p class="text-sm">
                            <AlertTriangle className="inline-block mr-1 h-4 w-4 text-yellow-500" />
                            Presencia de estereotipos
                        </p>
                    )
                }
                {
                    Analysis.additionalContextEvaluation.powerAsymmetry
                        .presence && (
                        <p class="text-sm">
                            <AlertTriangle className="inline-block mr-1 h-4 w-4 text-yellow-500" />
                            Asimetría de poder detectada
                        </p>
                    )
                }
                {
                    Analysis.additionalContextEvaluation
                        .genderRepresentationAbsence.presence && (
                        <p class="text-sm">
                            <AlertTriangle className="inline-block mr-1 h-4 w-4 text-yellow-500" />
                            Ausencia de representación de género
                        </p>
                    )
                }
            </div>
        </div>
        <div class="flex justify-between mt-2">
            <ToggleButton
                id="expander"
                variant="outline"
                size="sm"
                className="text-xs sm:text-sm"
            >
                <span slot="off">Menos detalles</span>
                <span slot="on">Más detalles</span>
            </ToggleButton>

            <Button variant="ghost" size="sm" className="group/arrow">
                <a
                    href={"/history/" + id}
                    class="flex items-center text-xs sm:text-sm"
                    data-astro-prefetch="viewport"
                >
                    Ver análisis completo{" "}
                    <ChevronRight
                        className="ml-2 h-4 w-4 group-hover/arrow:translate-x-1 transition-transform"
                    />
                </a>
            </Button>
        </div>
    </CardContent>
</Card>
