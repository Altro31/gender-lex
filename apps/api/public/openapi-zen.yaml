openapi: 3.1.0
info:
    title: ZenStack Generated API
    version: 1.0.0
tags:
    - name: user
      description: User operations
    - name: session
      description: Session operations
    - name: account
      description: Account operations
    - name: verification
      description: Verification operations
    - name: analysis
      description: Analysis operations
    - name: preset
      description: Preset operations
    - name: model
      description: Model operations
paths:
    /zen/user:
        get:
            operationId: list-User
            description: List "User" resources
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email]
                  required: false
                  description: Equality filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$contains]
                  required: false
                  description: String contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$icontains]
                  required: false
                  description: String case-insensitive contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$search]
                  required: false
                  description: String full-text search filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$startsWith]
                  required: false
                  description: String startsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$endsWith]
                  required: false
                  description: String endsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[emailVerified]
                  required: false
                  description: Equality filter for "emailVerified"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[image]
                  required: false
                  description: Equality filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$contains]
                  required: false
                  description: String contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$icontains]
                  required: false
                  description: String case-insensitive contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$search]
                  required: false
                  description: String full-text search filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$startsWith]
                  required: false
                  description: String startsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$endsWith]
                  required: false
                  description: String endsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[isAnonymous]
                  required: false
                  description: Equality filter for "isAnonymous"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[loggedAt]
                  required: false
                  description: Equality filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lt]
                  required: false
                  description: Less-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lte]
                  required: false
                  description: Less-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gt]
                  required: false
                  description: Greater-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[role]
                  required: false
                  description: Equality filter for "role"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Role'
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[Analyses]
                  required: false
                  description: Equality filter for "Analyses"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Models]
                  required: false
                  description: Equality filter for "Models"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Presets]
                  required: false
                  description: Equality filter for "Presets"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[sessions]
                  required: false
                  description: Equality filter for "sessions"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[accounts]
                  required: false
                  description: Equality filter for "accounts"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-User
            description: Create a "User" resource
            tags:
                - user
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/UserCreateRequest'
            responses:
                '201':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/user/{id}:
        get:
            operationId: fetch-User
            description: Fetch a "User" resource
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-User-put
            description: Update a "User" resource
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/UserUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-User-patch
            description: Update a "User" resource
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/UserUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        delete:
            operationId: delete-User
            description: Delete a "User" resource
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/user/{id}/Analyses:
        get:
            operationId: fetch-User-related-Analyses
            description: Fetch the related "Analyses" resource for "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email]
                  required: false
                  description: Equality filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$contains]
                  required: false
                  description: String contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$icontains]
                  required: false
                  description: String case-insensitive contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$search]
                  required: false
                  description: String full-text search filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$startsWith]
                  required: false
                  description: String startsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$endsWith]
                  required: false
                  description: String endsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[emailVerified]
                  required: false
                  description: Equality filter for "emailVerified"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[image]
                  required: false
                  description: Equality filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$contains]
                  required: false
                  description: String contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$icontains]
                  required: false
                  description: String case-insensitive contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$search]
                  required: false
                  description: String full-text search filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$startsWith]
                  required: false
                  description: String startsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$endsWith]
                  required: false
                  description: String endsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[isAnonymous]
                  required: false
                  description: Equality filter for "isAnonymous"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[loggedAt]
                  required: false
                  description: Equality filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lt]
                  required: false
                  description: Less-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lte]
                  required: false
                  description: Less-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gt]
                  required: false
                  description: Greater-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[role]
                  required: false
                  description: Equality filter for "role"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Role'
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[Analyses]
                  required: false
                  description: Equality filter for "Analyses"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Models]
                  required: false
                  description: Equality filter for "Models"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Presets]
                  required: false
                  description: Equality filter for "Presets"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[sessions]
                  required: false
                  description: Equality filter for "sessions"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[accounts]
                  required: false
                  description: Equality filter for "accounts"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/AnalysisListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/user/{id}/relationships/Analyses:
        get:
            operationId: fetch-User-relationship-Analyses
            description: Fetch the "Analyses" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email]
                  required: false
                  description: Equality filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$contains]
                  required: false
                  description: String contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$icontains]
                  required: false
                  description: String case-insensitive contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$search]
                  required: false
                  description: String full-text search filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$startsWith]
                  required: false
                  description: String startsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$endsWith]
                  required: false
                  description: String endsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[emailVerified]
                  required: false
                  description: Equality filter for "emailVerified"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[image]
                  required: false
                  description: Equality filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$contains]
                  required: false
                  description: String contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$icontains]
                  required: false
                  description: String case-insensitive contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$search]
                  required: false
                  description: String full-text search filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$startsWith]
                  required: false
                  description: String startsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$endsWith]
                  required: false
                  description: String endsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[isAnonymous]
                  required: false
                  description: Equality filter for "isAnonymous"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[loggedAt]
                  required: false
                  description: Equality filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lt]
                  required: false
                  description: Less-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lte]
                  required: false
                  description: Less-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gt]
                  required: false
                  description: Greater-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[role]
                  required: false
                  description: Equality filter for "role"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Role'
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[Analyses]
                  required: false
                  description: Equality filter for "Analyses"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Models]
                  required: false
                  description: Equality filter for "Models"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Presets]
                  required: false
                  description: Equality filter for "Presets"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[sessions]
                  required: false
                  description: Equality filter for "sessions"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[accounts]
                  required: false
                  description: Equality filter for "accounts"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-User-relationship-Analyses-put
            description: Update "Analyses" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-User-relationship-Analyses-patch
            description: Update "Analyses" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-User-relationship-Analyses
            description: Create new "Analyses" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/user/{id}/Models:
        get:
            operationId: fetch-User-related-Models
            description: Fetch the related "Models" resource for "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email]
                  required: false
                  description: Equality filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$contains]
                  required: false
                  description: String contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$icontains]
                  required: false
                  description: String case-insensitive contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$search]
                  required: false
                  description: String full-text search filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$startsWith]
                  required: false
                  description: String startsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$endsWith]
                  required: false
                  description: String endsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[emailVerified]
                  required: false
                  description: Equality filter for "emailVerified"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[image]
                  required: false
                  description: Equality filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$contains]
                  required: false
                  description: String contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$icontains]
                  required: false
                  description: String case-insensitive contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$search]
                  required: false
                  description: String full-text search filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$startsWith]
                  required: false
                  description: String startsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$endsWith]
                  required: false
                  description: String endsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[isAnonymous]
                  required: false
                  description: Equality filter for "isAnonymous"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[loggedAt]
                  required: false
                  description: Equality filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lt]
                  required: false
                  description: Less-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lte]
                  required: false
                  description: Less-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gt]
                  required: false
                  description: Greater-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[role]
                  required: false
                  description: Equality filter for "role"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Role'
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[Analyses]
                  required: false
                  description: Equality filter for "Analyses"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Models]
                  required: false
                  description: Equality filter for "Models"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Presets]
                  required: false
                  description: Equality filter for "Presets"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[sessions]
                  required: false
                  description: Equality filter for "sessions"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[accounts]
                  required: false
                  description: Equality filter for "accounts"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/ModelListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/user/{id}/relationships/Models:
        get:
            operationId: fetch-User-relationship-Models
            description: Fetch the "Models" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email]
                  required: false
                  description: Equality filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$contains]
                  required: false
                  description: String contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$icontains]
                  required: false
                  description: String case-insensitive contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$search]
                  required: false
                  description: String full-text search filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$startsWith]
                  required: false
                  description: String startsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$endsWith]
                  required: false
                  description: String endsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[emailVerified]
                  required: false
                  description: Equality filter for "emailVerified"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[image]
                  required: false
                  description: Equality filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$contains]
                  required: false
                  description: String contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$icontains]
                  required: false
                  description: String case-insensitive contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$search]
                  required: false
                  description: String full-text search filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$startsWith]
                  required: false
                  description: String startsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$endsWith]
                  required: false
                  description: String endsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[isAnonymous]
                  required: false
                  description: Equality filter for "isAnonymous"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[loggedAt]
                  required: false
                  description: Equality filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lt]
                  required: false
                  description: Less-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lte]
                  required: false
                  description: Less-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gt]
                  required: false
                  description: Greater-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[role]
                  required: false
                  description: Equality filter for "role"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Role'
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[Analyses]
                  required: false
                  description: Equality filter for "Analyses"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Models]
                  required: false
                  description: Equality filter for "Models"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Presets]
                  required: false
                  description: Equality filter for "Presets"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[sessions]
                  required: false
                  description: Equality filter for "sessions"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[accounts]
                  required: false
                  description: Equality filter for "accounts"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-User-relationship-Models-put
            description: Update "Models" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-User-relationship-Models-patch
            description: Update "Models" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-User-relationship-Models
            description: Create new "Models" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/user/{id}/Presets:
        get:
            operationId: fetch-User-related-Presets
            description: Fetch the related "Presets" resource for "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email]
                  required: false
                  description: Equality filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$contains]
                  required: false
                  description: String contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$icontains]
                  required: false
                  description: String case-insensitive contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$search]
                  required: false
                  description: String full-text search filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$startsWith]
                  required: false
                  description: String startsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$endsWith]
                  required: false
                  description: String endsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[emailVerified]
                  required: false
                  description: Equality filter for "emailVerified"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[image]
                  required: false
                  description: Equality filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$contains]
                  required: false
                  description: String contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$icontains]
                  required: false
                  description: String case-insensitive contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$search]
                  required: false
                  description: String full-text search filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$startsWith]
                  required: false
                  description: String startsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$endsWith]
                  required: false
                  description: String endsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[isAnonymous]
                  required: false
                  description: Equality filter for "isAnonymous"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[loggedAt]
                  required: false
                  description: Equality filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lt]
                  required: false
                  description: Less-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lte]
                  required: false
                  description: Less-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gt]
                  required: false
                  description: Greater-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[role]
                  required: false
                  description: Equality filter for "role"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Role'
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[Analyses]
                  required: false
                  description: Equality filter for "Analyses"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Models]
                  required: false
                  description: Equality filter for "Models"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Presets]
                  required: false
                  description: Equality filter for "Presets"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[sessions]
                  required: false
                  description: Equality filter for "sessions"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[accounts]
                  required: false
                  description: Equality filter for "accounts"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/PresetListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/user/{id}/relationships/Presets:
        get:
            operationId: fetch-User-relationship-Presets
            description: Fetch the "Presets" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email]
                  required: false
                  description: Equality filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$contains]
                  required: false
                  description: String contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$icontains]
                  required: false
                  description: String case-insensitive contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$search]
                  required: false
                  description: String full-text search filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$startsWith]
                  required: false
                  description: String startsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$endsWith]
                  required: false
                  description: String endsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[emailVerified]
                  required: false
                  description: Equality filter for "emailVerified"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[image]
                  required: false
                  description: Equality filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$contains]
                  required: false
                  description: String contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$icontains]
                  required: false
                  description: String case-insensitive contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$search]
                  required: false
                  description: String full-text search filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$startsWith]
                  required: false
                  description: String startsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$endsWith]
                  required: false
                  description: String endsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[isAnonymous]
                  required: false
                  description: Equality filter for "isAnonymous"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[loggedAt]
                  required: false
                  description: Equality filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lt]
                  required: false
                  description: Less-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lte]
                  required: false
                  description: Less-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gt]
                  required: false
                  description: Greater-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[role]
                  required: false
                  description: Equality filter for "role"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Role'
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[Analyses]
                  required: false
                  description: Equality filter for "Analyses"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Models]
                  required: false
                  description: Equality filter for "Models"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Presets]
                  required: false
                  description: Equality filter for "Presets"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[sessions]
                  required: false
                  description: Equality filter for "sessions"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[accounts]
                  required: false
                  description: Equality filter for "accounts"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-User-relationship-Presets-put
            description: Update "Presets" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-User-relationship-Presets-patch
            description: Update "Presets" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-User-relationship-Presets
            description: Create new "Presets" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/user/{id}/sessions:
        get:
            operationId: fetch-User-related-sessions
            description: Fetch the related "sessions" resource for "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email]
                  required: false
                  description: Equality filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$contains]
                  required: false
                  description: String contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$icontains]
                  required: false
                  description: String case-insensitive contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$search]
                  required: false
                  description: String full-text search filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$startsWith]
                  required: false
                  description: String startsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$endsWith]
                  required: false
                  description: String endsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[emailVerified]
                  required: false
                  description: Equality filter for "emailVerified"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[image]
                  required: false
                  description: Equality filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$contains]
                  required: false
                  description: String contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$icontains]
                  required: false
                  description: String case-insensitive contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$search]
                  required: false
                  description: String full-text search filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$startsWith]
                  required: false
                  description: String startsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$endsWith]
                  required: false
                  description: String endsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[isAnonymous]
                  required: false
                  description: Equality filter for "isAnonymous"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[loggedAt]
                  required: false
                  description: Equality filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lt]
                  required: false
                  description: Less-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lte]
                  required: false
                  description: Less-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gt]
                  required: false
                  description: Greater-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[role]
                  required: false
                  description: Equality filter for "role"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Role'
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[Analyses]
                  required: false
                  description: Equality filter for "Analyses"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Models]
                  required: false
                  description: Equality filter for "Models"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Presets]
                  required: false
                  description: Equality filter for "Presets"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[sessions]
                  required: false
                  description: Equality filter for "sessions"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[accounts]
                  required: false
                  description: Equality filter for "accounts"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/SessionListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/user/{id}/relationships/sessions:
        get:
            operationId: fetch-User-relationship-sessions
            description: Fetch the "sessions" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email]
                  required: false
                  description: Equality filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$contains]
                  required: false
                  description: String contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$icontains]
                  required: false
                  description: String case-insensitive contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$search]
                  required: false
                  description: String full-text search filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$startsWith]
                  required: false
                  description: String startsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$endsWith]
                  required: false
                  description: String endsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[emailVerified]
                  required: false
                  description: Equality filter for "emailVerified"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[image]
                  required: false
                  description: Equality filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$contains]
                  required: false
                  description: String contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$icontains]
                  required: false
                  description: String case-insensitive contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$search]
                  required: false
                  description: String full-text search filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$startsWith]
                  required: false
                  description: String startsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$endsWith]
                  required: false
                  description: String endsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[isAnonymous]
                  required: false
                  description: Equality filter for "isAnonymous"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[loggedAt]
                  required: false
                  description: Equality filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lt]
                  required: false
                  description: Less-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lte]
                  required: false
                  description: Less-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gt]
                  required: false
                  description: Greater-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[role]
                  required: false
                  description: Equality filter for "role"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Role'
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[Analyses]
                  required: false
                  description: Equality filter for "Analyses"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Models]
                  required: false
                  description: Equality filter for "Models"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Presets]
                  required: false
                  description: Equality filter for "Presets"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[sessions]
                  required: false
                  description: Equality filter for "sessions"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[accounts]
                  required: false
                  description: Equality filter for "accounts"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-User-relationship-sessions-put
            description: Update "sessions" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-User-relationship-sessions-patch
            description: Update "sessions" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-User-relationship-sessions
            description: Create new "sessions" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/user/{id}/accounts:
        get:
            operationId: fetch-User-related-accounts
            description: Fetch the related "accounts" resource for "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email]
                  required: false
                  description: Equality filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$contains]
                  required: false
                  description: String contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$icontains]
                  required: false
                  description: String case-insensitive contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$search]
                  required: false
                  description: String full-text search filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$startsWith]
                  required: false
                  description: String startsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$endsWith]
                  required: false
                  description: String endsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[emailVerified]
                  required: false
                  description: Equality filter for "emailVerified"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[image]
                  required: false
                  description: Equality filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$contains]
                  required: false
                  description: String contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$icontains]
                  required: false
                  description: String case-insensitive contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$search]
                  required: false
                  description: String full-text search filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$startsWith]
                  required: false
                  description: String startsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$endsWith]
                  required: false
                  description: String endsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[isAnonymous]
                  required: false
                  description: Equality filter for "isAnonymous"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[loggedAt]
                  required: false
                  description: Equality filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lt]
                  required: false
                  description: Less-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lte]
                  required: false
                  description: Less-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gt]
                  required: false
                  description: Greater-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[role]
                  required: false
                  description: Equality filter for "role"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Role'
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[Analyses]
                  required: false
                  description: Equality filter for "Analyses"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Models]
                  required: false
                  description: Equality filter for "Models"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Presets]
                  required: false
                  description: Equality filter for "Presets"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[sessions]
                  required: false
                  description: Equality filter for "sessions"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[accounts]
                  required: false
                  description: Equality filter for "accounts"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/AccountListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/user/{id}/relationships/accounts:
        get:
            operationId: fetch-User-relationship-accounts
            description: Fetch the "accounts" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email]
                  required: false
                  description: Equality filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$contains]
                  required: false
                  description: String contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$icontains]
                  required: false
                  description: String case-insensitive contains filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$search]
                  required: false
                  description: String full-text search filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$startsWith]
                  required: false
                  description: String startsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[email$endsWith]
                  required: false
                  description: String endsWith filter for "email"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[emailVerified]
                  required: false
                  description: Equality filter for "emailVerified"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[image]
                  required: false
                  description: Equality filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$contains]
                  required: false
                  description: String contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$icontains]
                  required: false
                  description: String case-insensitive contains filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$search]
                  required: false
                  description: String full-text search filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$startsWith]
                  required: false
                  description: String startsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[image$endsWith]
                  required: false
                  description: String endsWith filter for "image"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[isAnonymous]
                  required: false
                  description: Equality filter for "isAnonymous"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[loggedAt]
                  required: false
                  description: Equality filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lt]
                  required: false
                  description: Less-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$lte]
                  required: false
                  description: Less-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gt]
                  required: false
                  description: Greater-than filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[loggedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "loggedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[role]
                  required: false
                  description: Equality filter for "role"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Role'
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[Analyses]
                  required: false
                  description: Equality filter for "Analyses"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Models]
                  required: false
                  description: Equality filter for "Models"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[Presets]
                  required: false
                  description: Equality filter for "Presets"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[sessions]
                  required: false
                  description: Equality filter for "sessions"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[accounts]
                  required: false
                  description: Equality filter for "accounts"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-User-relationship-accounts-put
            description: Update "accounts" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-User-relationship-accounts-patch
            description: Update "accounts" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-User-relationship-accounts
            description: Create new "accounts" relationships for a "User"
            tags:
                - user
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/session:
        get:
            operationId: list-Session
            description: List "Session" resources
            tags:
                - session
            parameters:
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[expiresAt]
                  required: false
                  description: Equality filter for "expiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[expiresAt$lt]
                  required: false
                  description: Less-than filter for "expiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[expiresAt$lte]
                  required: false
                  description: Less-than or equal filter for "expiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[expiresAt$gt]
                  required: false
                  description: Greater-than filter for "expiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[expiresAt$gte]
                  required: false
                  description: Greater-than or equal filter for "expiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[token]
                  required: false
                  description: Equality filter for "token"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[token$contains]
                  required: false
                  description: String contains filter for "token"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[token$icontains]
                  required: false
                  description: String case-insensitive contains filter for "token"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[token$search]
                  required: false
                  description: String full-text search filter for "token"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[token$startsWith]
                  required: false
                  description: String startsWith filter for "token"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[token$endsWith]
                  required: false
                  description: String endsWith filter for "token"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[ipAddress]
                  required: false
                  description: Equality filter for "ipAddress"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[ipAddress$contains]
                  required: false
                  description: String contains filter for "ipAddress"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[ipAddress$icontains]
                  required: false
                  description: String case-insensitive contains filter for "ipAddress"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[ipAddress$search]
                  required: false
                  description: String full-text search filter for "ipAddress"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[ipAddress$startsWith]
                  required: false
                  description: String startsWith filter for "ipAddress"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[ipAddress$endsWith]
                  required: false
                  description: String endsWith filter for "ipAddress"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[userAgent]
                  required: false
                  description: Equality filter for "userAgent"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[userAgent$contains]
                  required: false
                  description: String contains filter for "userAgent"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[userAgent$icontains]
                  required: false
                  description: String case-insensitive contains filter for "userAgent"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[userAgent$search]
                  required: false
                  description: String full-text search filter for "userAgent"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[userAgent$startsWith]
                  required: false
                  description: String startsWith filter for "userAgent"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[userAgent$endsWith]
                  required: false
                  description: String endsWith filter for "userAgent"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[lang]
                  required: false
                  description: Equality filter for "lang"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[lang$contains]
                  required: false
                  description: String contains filter for "lang"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[lang$icontains]
                  required: false
                  description: String case-insensitive contains filter for "lang"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[lang$search]
                  required: false
                  description: String full-text search filter for "lang"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[lang$startsWith]
                  required: false
                  description: String startsWith filter for "lang"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[lang$endsWith]
                  required: false
                  description: String endsWith filter for "lang"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[user]
                  required: false
                  description: Equality filter for "user"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/SessionListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-Session
            description: Create a "Session" resource
            tags:
                - session
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/SessionCreateRequest'
            responses:
                '201':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/SessionResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/session/{id}:
        get:
            operationId: fetch-Session
            description: Fetch a "Session" resource
            tags:
                - session
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/SessionResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Session-put
            description: Update a "Session" resource
            tags:
                - session
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/SessionUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/SessionResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Session-patch
            description: Update a "Session" resource
            tags:
                - session
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/SessionUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/SessionResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        delete:
            operationId: delete-Session
            description: Delete a "Session" resource
            tags:
                - session
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/session/{id}/user:
        get:
            operationId: fetch-Session-related-user
            description: Fetch the related "user" resource for "Session"
            tags:
                - session
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/session/{id}/relationships/user:
        get:
            operationId: fetch-Session-relationship-user
            description: Fetch the "user" relationships for a "Session"
            tags:
                - session
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Session-relationship-user-put
            description: Update "user" relationship for a "Session"
            tags:
                - session
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toOneRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Session-relationship-user-patch
            description: Update "user" relationship for a "Session"
            tags:
                - session
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toOneRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/account:
        get:
            operationId: list-Account
            description: List "Account" resources
            tags:
                - account
            parameters:
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[accountId]
                  required: false
                  description: Equality filter for "accountId"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[accountId$contains]
                  required: false
                  description: String contains filter for "accountId"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[accountId$icontains]
                  required: false
                  description: String case-insensitive contains filter for "accountId"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[accountId$search]
                  required: false
                  description: String full-text search filter for "accountId"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[accountId$startsWith]
                  required: false
                  description: String startsWith filter for "accountId"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[accountId$endsWith]
                  required: false
                  description: String endsWith filter for "accountId"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[providerId]
                  required: false
                  description: Equality filter for "providerId"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[providerId$contains]
                  required: false
                  description: String contains filter for "providerId"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[providerId$icontains]
                  required: false
                  description: String case-insensitive contains filter for "providerId"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[providerId$search]
                  required: false
                  description: String full-text search filter for "providerId"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[providerId$startsWith]
                  required: false
                  description: String startsWith filter for "providerId"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[providerId$endsWith]
                  required: false
                  description: String endsWith filter for "providerId"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[user]
                  required: false
                  description: Equality filter for "user"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[accessToken]
                  required: false
                  description: Equality filter for "accessToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[accessToken$contains]
                  required: false
                  description: String contains filter for "accessToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[accessToken$icontains]
                  required: false
                  description: String case-insensitive contains filter for "accessToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[accessToken$search]
                  required: false
                  description: String full-text search filter for "accessToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[accessToken$startsWith]
                  required: false
                  description: String startsWith filter for "accessToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[accessToken$endsWith]
                  required: false
                  description: String endsWith filter for "accessToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[refreshToken]
                  required: false
                  description: Equality filter for "refreshToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[refreshToken$contains]
                  required: false
                  description: String contains filter for "refreshToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[refreshToken$icontains]
                  required: false
                  description: String case-insensitive contains filter for "refreshToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[refreshToken$search]
                  required: false
                  description: String full-text search filter for "refreshToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[refreshToken$startsWith]
                  required: false
                  description: String startsWith filter for "refreshToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[refreshToken$endsWith]
                  required: false
                  description: String endsWith filter for "refreshToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[idToken]
                  required: false
                  description: Equality filter for "idToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[idToken$contains]
                  required: false
                  description: String contains filter for "idToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[idToken$icontains]
                  required: false
                  description: String case-insensitive contains filter for "idToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[idToken$search]
                  required: false
                  description: String full-text search filter for "idToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[idToken$startsWith]
                  required: false
                  description: String startsWith filter for "idToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[idToken$endsWith]
                  required: false
                  description: String endsWith filter for "idToken"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[accessTokenExpiresAt]
                  required: false
                  description: Equality filter for "accessTokenExpiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[accessTokenExpiresAt$lt]
                  required: false
                  description: Less-than filter for "accessTokenExpiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[accessTokenExpiresAt$lte]
                  required: false
                  description: Less-than or equal filter for "accessTokenExpiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[accessTokenExpiresAt$gt]
                  required: false
                  description: Greater-than filter for "accessTokenExpiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[accessTokenExpiresAt$gte]
                  required: false
                  description: Greater-than or equal filter for "accessTokenExpiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[refreshTokenExpiresAt]
                  required: false
                  description: Equality filter for "refreshTokenExpiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[refreshTokenExpiresAt$lt]
                  required: false
                  description: Less-than filter for "refreshTokenExpiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[refreshTokenExpiresAt$lte]
                  required: false
                  description: Less-than or equal filter for "refreshTokenExpiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[refreshTokenExpiresAt$gt]
                  required: false
                  description: Greater-than filter for "refreshTokenExpiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[refreshTokenExpiresAt$gte]
                  required: false
                  description: Greater-than or equal filter for "refreshTokenExpiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[scope]
                  required: false
                  description: Equality filter for "scope"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[scope$contains]
                  required: false
                  description: String contains filter for "scope"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[scope$icontains]
                  required: false
                  description: String case-insensitive contains filter for "scope"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[scope$search]
                  required: false
                  description: String full-text search filter for "scope"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[scope$startsWith]
                  required: false
                  description: String startsWith filter for "scope"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[scope$endsWith]
                  required: false
                  description: String endsWith filter for "scope"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[password]
                  required: false
                  description: Equality filter for "password"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[password$contains]
                  required: false
                  description: String contains filter for "password"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[password$icontains]
                  required: false
                  description: String case-insensitive contains filter for "password"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[password$search]
                  required: false
                  description: String full-text search filter for "password"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[password$startsWith]
                  required: false
                  description: String startsWith filter for "password"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[password$endsWith]
                  required: false
                  description: String endsWith filter for "password"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/AccountListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-Account
            description: Create a "Account" resource
            tags:
                - account
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/AccountCreateRequest'
            responses:
                '201':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/AccountResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/account/{id}:
        get:
            operationId: fetch-Account
            description: Fetch a "Account" resource
            tags:
                - account
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/AccountResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Account-put
            description: Update a "Account" resource
            tags:
                - account
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/AccountUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/AccountResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Account-patch
            description: Update a "Account" resource
            tags:
                - account
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/AccountUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/AccountResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        delete:
            operationId: delete-Account
            description: Delete a "Account" resource
            tags:
                - account
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/account/{id}/user:
        get:
            operationId: fetch-Account-related-user
            description: Fetch the related "user" resource for "Account"
            tags:
                - account
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/account/{id}/relationships/user:
        get:
            operationId: fetch-Account-relationship-user
            description: Fetch the "user" relationships for a "Account"
            tags:
                - account
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Account-relationship-user-put
            description: Update "user" relationship for a "Account"
            tags:
                - account
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toOneRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Account-relationship-user-patch
            description: Update "user" relationship for a "Account"
            tags:
                - account
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toOneRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/verification:
        get:
            operationId: list-Verification
            description: List "Verification" resources
            tags:
                - verification
            parameters:
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[identifier]
                  required: false
                  description: Equality filter for "identifier"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[identifier$contains]
                  required: false
                  description: String contains filter for "identifier"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[identifier$icontains]
                  required: false
                  description: String case-insensitive contains filter for "identifier"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[identifier$search]
                  required: false
                  description: String full-text search filter for "identifier"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[identifier$startsWith]
                  required: false
                  description: String startsWith filter for "identifier"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[identifier$endsWith]
                  required: false
                  description: String endsWith filter for "identifier"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[value]
                  required: false
                  description: Equality filter for "value"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[value$contains]
                  required: false
                  description: String contains filter for "value"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[value$icontains]
                  required: false
                  description: String case-insensitive contains filter for "value"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[value$search]
                  required: false
                  description: String full-text search filter for "value"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[value$startsWith]
                  required: false
                  description: String startsWith filter for "value"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[value$endsWith]
                  required: false
                  description: String endsWith filter for "value"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[expiresAt]
                  required: false
                  description: Equality filter for "expiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[expiresAt$lt]
                  required: false
                  description: Less-than filter for "expiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[expiresAt$lte]
                  required: false
                  description: Less-than or equal filter for "expiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[expiresAt$gt]
                  required: false
                  description: Greater-than filter for "expiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[expiresAt$gte]
                  required: false
                  description: Greater-than or equal filter for "expiresAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/VerificationListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-Verification
            description: Create a "Verification" resource
            tags:
                - verification
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/VerificationCreateRequest'
            responses:
                '201':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/VerificationResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/verification/{id}:
        get:
            operationId: fetch-Verification
            description: Fetch a "Verification" resource
            tags:
                - verification
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/VerificationResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Verification-put
            description: Update a "Verification" resource
            tags:
                - verification
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/VerificationUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/VerificationResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Verification-patch
            description: Update a "Verification" resource
            tags:
                - verification
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/VerificationUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/VerificationResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        delete:
            operationId: delete-Verification
            description: Delete a "Verification" resource
            tags:
                - verification
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/analysis:
        get:
            operationId: list-Analysis
            description: List "Analysis" resources
            tags:
                - analysis
            parameters:
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[originalText]
                  required: false
                  description: Equality filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[originalText$contains]
                  required: false
                  description: String contains filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[originalText$icontains]
                  required: false
                  description: String case-insensitive contains filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[originalText$search]
                  required: false
                  description: String full-text search filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[originalText$startsWith]
                  required: false
                  description: String startsWith filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[originalText$endsWith]
                  required: false
                  description: String endsWith filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[modifiedTextAlternatives]
                  required: false
                  description: Equality filter for "modifiedTextAlternatives"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[modifiedTextAlternatives$has]
                  required: false
                  description: Collection contains filter for "modifiedTextAlternatives"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[modifiedTextAlternatives$hasEvery]
                  required: false
                  description: Collection contains-all filter for "modifiedTextAlternatives"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[modifiedTextAlternatives$hasSome]
                  required: false
                  description: Collection contains-any filter for "modifiedTextAlternatives"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[modifiedTextAlternatives$isEmpty]
                  required: false
                  description: Collection is empty filter for "modifiedTextAlternatives"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[biasedTerms]
                  required: false
                  description: Equality filter for "biasedTerms"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedTerms$has]
                  required: false
                  description: Collection contains filter for "biasedTerms"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[biasedTerms$hasEvery]
                  required: false
                  description: Collection contains-all filter for "biasedTerms"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedTerms$hasSome]
                  required: false
                  description: Collection contains-any filter for "biasedTerms"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedTerms$isEmpty]
                  required: false
                  description: Collection is empty filter for "biasedTerms"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[biasedMetaphors]
                  required: false
                  description: Equality filter for "biasedMetaphors"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedMetaphors$has]
                  required: false
                  description: Collection contains filter for "biasedMetaphors"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[biasedMetaphors$hasEvery]
                  required: false
                  description: Collection contains-all filter for "biasedMetaphors"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedMetaphors$hasSome]
                  required: false
                  description: Collection contains-any filter for "biasedMetaphors"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedMetaphors$isEmpty]
                  required: false
                  description: Collection is empty filter for "biasedMetaphors"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[additionalContextEvaluation]
                  required: false
                  description: Equality filter for "additionalContextEvaluation"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[impactAnalysis]
                  required: false
                  description: Equality filter for "impactAnalysis"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[conclusion]
                  required: false
                  description: Equality filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[conclusion$contains]
                  required: false
                  description: String contains filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[conclusion$icontains]
                  required: false
                  description: String case-insensitive contains filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[conclusion$search]
                  required: false
                  description: String full-text search filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[conclusion$startsWith]
                  required: false
                  description: String startsWith filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[conclusion$endsWith]
                  required: false
                  description: String endsWith filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[visibility]
                  required: false
                  description: Equality filter for "visibility"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Visibility'
                - name: filter[status]
                  required: false
                  description: Equality filter for "status"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/AnalysisStatus'
                - name: filter[inputSource]
                  required: false
                  description: Equality filter for "inputSource"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/InputSource'
                - name: filter[Presets]
                  required: false
                  description: Equality filter for "Presets"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[User]
                  required: false
                  description: Equality filter for "User"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/AnalysisListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-Analysis
            description: Create a "Analysis" resource
            tags:
                - analysis
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/AnalysisCreateRequest'
            responses:
                '201':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/AnalysisResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/analysis/{id}:
        get:
            operationId: fetch-Analysis
            description: Fetch a "Analysis" resource
            tags:
                - analysis
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/AnalysisResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Analysis-put
            description: Update a "Analysis" resource
            tags:
                - analysis
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/AnalysisUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/AnalysisResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Analysis-patch
            description: Update a "Analysis" resource
            tags:
                - analysis
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/AnalysisUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/AnalysisResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        delete:
            operationId: delete-Analysis
            description: Delete a "Analysis" resource
            tags:
                - analysis
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/analysis/{id}/Presets:
        get:
            operationId: fetch-Analysis-related-Presets
            description: Fetch the related "Presets" resource for "Analysis"
            tags:
                - analysis
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[originalText]
                  required: false
                  description: Equality filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[originalText$contains]
                  required: false
                  description: String contains filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[originalText$icontains]
                  required: false
                  description: String case-insensitive contains filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[originalText$search]
                  required: false
                  description: String full-text search filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[originalText$startsWith]
                  required: false
                  description: String startsWith filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[originalText$endsWith]
                  required: false
                  description: String endsWith filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[modifiedTextAlternatives]
                  required: false
                  description: Equality filter for "modifiedTextAlternatives"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[modifiedTextAlternatives$has]
                  required: false
                  description: Collection contains filter for "modifiedTextAlternatives"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[modifiedTextAlternatives$hasEvery]
                  required: false
                  description: Collection contains-all filter for "modifiedTextAlternatives"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[modifiedTextAlternatives$hasSome]
                  required: false
                  description: Collection contains-any filter for "modifiedTextAlternatives"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[modifiedTextAlternatives$isEmpty]
                  required: false
                  description: Collection is empty filter for "modifiedTextAlternatives"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[biasedTerms]
                  required: false
                  description: Equality filter for "biasedTerms"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedTerms$has]
                  required: false
                  description: Collection contains filter for "biasedTerms"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[biasedTerms$hasEvery]
                  required: false
                  description: Collection contains-all filter for "biasedTerms"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedTerms$hasSome]
                  required: false
                  description: Collection contains-any filter for "biasedTerms"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedTerms$isEmpty]
                  required: false
                  description: Collection is empty filter for "biasedTerms"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[biasedMetaphors]
                  required: false
                  description: Equality filter for "biasedMetaphors"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedMetaphors$has]
                  required: false
                  description: Collection contains filter for "biasedMetaphors"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[biasedMetaphors$hasEvery]
                  required: false
                  description: Collection contains-all filter for "biasedMetaphors"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedMetaphors$hasSome]
                  required: false
                  description: Collection contains-any filter for "biasedMetaphors"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedMetaphors$isEmpty]
                  required: false
                  description: Collection is empty filter for "biasedMetaphors"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[additionalContextEvaluation]
                  required: false
                  description: Equality filter for "additionalContextEvaluation"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[impactAnalysis]
                  required: false
                  description: Equality filter for "impactAnalysis"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[conclusion]
                  required: false
                  description: Equality filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[conclusion$contains]
                  required: false
                  description: String contains filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[conclusion$icontains]
                  required: false
                  description: String case-insensitive contains filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[conclusion$search]
                  required: false
                  description: String full-text search filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[conclusion$startsWith]
                  required: false
                  description: String startsWith filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[conclusion$endsWith]
                  required: false
                  description: String endsWith filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[visibility]
                  required: false
                  description: Equality filter for "visibility"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Visibility'
                - name: filter[status]
                  required: false
                  description: Equality filter for "status"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/AnalysisStatus'
                - name: filter[inputSource]
                  required: false
                  description: Equality filter for "inputSource"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/InputSource'
                - name: filter[Presets]
                  required: false
                  description: Equality filter for "Presets"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[User]
                  required: false
                  description: Equality filter for "User"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/PresetListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/analysis/{id}/relationships/Presets:
        get:
            operationId: fetch-Analysis-relationship-Presets
            description: Fetch the "Presets" relationships for a "Analysis"
            tags:
                - analysis
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[originalText]
                  required: false
                  description: Equality filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[originalText$contains]
                  required: false
                  description: String contains filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[originalText$icontains]
                  required: false
                  description: String case-insensitive contains filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[originalText$search]
                  required: false
                  description: String full-text search filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[originalText$startsWith]
                  required: false
                  description: String startsWith filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[originalText$endsWith]
                  required: false
                  description: String endsWith filter for "originalText"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[modifiedTextAlternatives]
                  required: false
                  description: Equality filter for "modifiedTextAlternatives"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[modifiedTextAlternatives$has]
                  required: false
                  description: Collection contains filter for "modifiedTextAlternatives"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[modifiedTextAlternatives$hasEvery]
                  required: false
                  description: Collection contains-all filter for "modifiedTextAlternatives"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[modifiedTextAlternatives$hasSome]
                  required: false
                  description: Collection contains-any filter for "modifiedTextAlternatives"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[modifiedTextAlternatives$isEmpty]
                  required: false
                  description: Collection is empty filter for "modifiedTextAlternatives"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[biasedTerms]
                  required: false
                  description: Equality filter for "biasedTerms"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedTerms$has]
                  required: false
                  description: Collection contains filter for "biasedTerms"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[biasedTerms$hasEvery]
                  required: false
                  description: Collection contains-all filter for "biasedTerms"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedTerms$hasSome]
                  required: false
                  description: Collection contains-any filter for "biasedTerms"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedTerms$isEmpty]
                  required: false
                  description: Collection is empty filter for "biasedTerms"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[biasedMetaphors]
                  required: false
                  description: Equality filter for "biasedMetaphors"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedMetaphors$has]
                  required: false
                  description: Collection contains filter for "biasedMetaphors"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[biasedMetaphors$hasEvery]
                  required: false
                  description: Collection contains-all filter for "biasedMetaphors"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedMetaphors$hasSome]
                  required: false
                  description: Collection contains-any filter for "biasedMetaphors"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                          format: json
                - name: filter[biasedMetaphors$isEmpty]
                  required: false
                  description: Collection is empty filter for "biasedMetaphors"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: boolean
                - name: filter[additionalContextEvaluation]
                  required: false
                  description: Equality filter for "additionalContextEvaluation"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[impactAnalysis]
                  required: false
                  description: Equality filter for "impactAnalysis"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[conclusion]
                  required: false
                  description: Equality filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[conclusion$contains]
                  required: false
                  description: String contains filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[conclusion$icontains]
                  required: false
                  description: String case-insensitive contains filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[conclusion$search]
                  required: false
                  description: String full-text search filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[conclusion$startsWith]
                  required: false
                  description: String startsWith filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[conclusion$endsWith]
                  required: false
                  description: String endsWith filter for "conclusion"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[visibility]
                  required: false
                  description: Equality filter for "visibility"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Visibility'
                - name: filter[status]
                  required: false
                  description: Equality filter for "status"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/AnalysisStatus'
                - name: filter[inputSource]
                  required: false
                  description: Equality filter for "inputSource"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/InputSource'
                - name: filter[Presets]
                  required: false
                  description: Equality filter for "Presets"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[User]
                  required: false
                  description: Equality filter for "User"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Analysis-relationship-Presets-put
            description: Update "Presets" relationships for a "Analysis"
            tags:
                - analysis
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Analysis-relationship-Presets-patch
            description: Update "Presets" relationships for a "Analysis"
            tags:
                - analysis
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-Analysis-relationship-Presets
            description: Create new "Presets" relationships for a "Analysis"
            tags:
                - analysis
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/analysis/{id}/User:
        get:
            operationId: fetch-Analysis-related-User
            description: Fetch the related "User" resource for "Analysis"
            tags:
                - analysis
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/analysis/{id}/relationships/User:
        get:
            operationId: fetch-Analysis-relationship-User
            description: Fetch the "User" relationships for a "Analysis"
            tags:
                - analysis
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Analysis-relationship-User-put
            description: Update "User" relationship for a "Analysis"
            tags:
                - analysis
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toOneRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Analysis-relationship-User-patch
            description: Update "User" relationship for a "Analysis"
            tags:
                - analysis
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toOneRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/preset:
        get:
            operationId: list-Preset
            description: List "Preset" resources
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[Models]
                  required: false
                  description: Equality filter for "Models"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[User]
                  required: false
                  description: Equality filter for "User"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[Analysis]
                  required: false
                  description: Equality filter for "Analysis"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/PresetListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-Preset
            description: Create a "Preset" resource
            tags:
                - preset
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/PresetCreateRequest'
            responses:
                '201':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/PresetResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/preset/{id}:
        get:
            operationId: fetch-Preset
            description: Fetch a "Preset" resource
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/PresetResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Preset-put
            description: Update a "Preset" resource
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/PresetUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/PresetResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Preset-patch
            description: Update a "Preset" resource
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/PresetUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/PresetResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        delete:
            operationId: delete-Preset
            description: Delete a "Preset" resource
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/preset/{id}/Models:
        get:
            operationId: fetch-Preset-related-Models
            description: Fetch the related "Models" resource for "Preset"
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[Models]
                  required: false
                  description: Equality filter for "Models"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[User]
                  required: false
                  description: Equality filter for "User"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[Analysis]
                  required: false
                  description: Equality filter for "Analysis"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/PresetModelListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/preset/{id}/relationships/Models:
        get:
            operationId: fetch-Preset-relationship-Models
            description: Fetch the "Models" relationships for a "Preset"
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[Models]
                  required: false
                  description: Equality filter for "Models"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[User]
                  required: false
                  description: Equality filter for "User"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[Analysis]
                  required: false
                  description: Equality filter for "Analysis"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Preset-relationship-Models-put
            description: Update "Models" relationships for a "Preset"
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Preset-relationship-Models-patch
            description: Update "Models" relationships for a "Preset"
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-Preset-relationship-Models
            description: Create new "Models" relationships for a "Preset"
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/preset/{id}/User:
        get:
            operationId: fetch-Preset-related-User
            description: Fetch the related "User" resource for "Preset"
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/preset/{id}/relationships/User:
        get:
            operationId: fetch-Preset-relationship-User
            description: Fetch the "User" relationships for a "Preset"
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Preset-relationship-User-put
            description: Update "User" relationship for a "Preset"
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toOneRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Preset-relationship-User-patch
            description: Update "User" relationship for a "Preset"
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toOneRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/preset/{id}/Analysis:
        get:
            operationId: fetch-Preset-related-Analysis
            description: Fetch the related "Analysis" resource for "Preset"
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[Models]
                  required: false
                  description: Equality filter for "Models"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[User]
                  required: false
                  description: Equality filter for "User"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[Analysis]
                  required: false
                  description: Equality filter for "Analysis"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/AnalysisListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/preset/{id}/relationships/Analysis:
        get:
            operationId: fetch-Preset-relationship-Analysis
            description: Fetch the "Analysis" relationships for a "Preset"
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[Models]
                  required: false
                  description: Equality filter for "Models"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
                - name: filter[User]
                  required: false
                  description: Equality filter for "User"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[Analysis]
                  required: false
                  description: Equality filter for "Analysis"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Preset-relationship-Analysis-put
            description: Update "Analysis" relationships for a "Preset"
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Preset-relationship-Analysis-patch
            description: Update "Analysis" relationships for a "Preset"
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-Preset-relationship-Analysis
            description: Create new "Analysis" relationships for a "Preset"
            tags:
                - preset
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/model:
        get:
            operationId: list-Model
            description: List "Model" resources
            tags:
                - model
            parameters:
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[connection]
                  required: false
                  description: Equality filter for "connection"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[settings]
                  required: false
                  description: Equality filter for "settings"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey]
                  required: false
                  description: Equality filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey$contains]
                  required: false
                  description: String contains filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey$icontains]
                  required: false
                  description: String case-insensitive contains filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey$search]
                  required: false
                  description: String full-text search filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey$startsWith]
                  required: false
                  description: String startsWith filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey$endsWith]
                  required: false
                  description: String endsWith filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[provider]
                  required: false
                  description: Equality filter for "provider"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Provider'
                - name: filter[status]
                  required: false
                  description: Equality filter for "status"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/ModelStatus'
                - name: filter[User]
                  required: false
                  description: Equality filter for "User"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[usedAt]
                  required: false
                  description: Equality filter for "usedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[usedAt$lt]
                  required: false
                  description: Less-than filter for "usedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[usedAt$lte]
                  required: false
                  description: Less-than or equal filter for "usedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[usedAt$gt]
                  required: false
                  description: Greater-than filter for "usedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[usedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "usedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[PresetModels]
                  required: false
                  description: Equality filter for "PresetModels"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/ModelListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-Model
            description: Create a "Model" resource
            tags:
                - model
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/ModelCreateRequest'
            responses:
                '201':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/ModelResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/model/{id}:
        get:
            operationId: fetch-Model
            description: Fetch a "Model" resource
            tags:
                - model
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/ModelResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Model-put
            description: Update a "Model" resource
            tags:
                - model
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/ModelUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/ModelResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Model-patch
            description: Update a "Model" resource
            tags:
                - model
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/ModelUpdateRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/ModelResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '422':
                    description: Request is unprocessable due to validation errors
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        delete:
            operationId: delete-Model
            description: Delete a "Model" resource
            tags:
                - model
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/model/{id}/User:
        get:
            operationId: fetch-Model-related-User
            description: Fetch the related "User" resource for "Model"
            tags:
                - model
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/model/{id}/relationships/User:
        get:
            operationId: fetch-Model-relationship-User
            description: Fetch the "User" relationships for a "Model"
            tags:
                - model
            parameters:
                - $ref: '#/components/parameters/id'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Model-relationship-User-put
            description: Update "User" relationship for a "Model"
            tags:
                - model
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toOneRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Model-relationship-User-patch
            description: Update "User" relationship for a "Model"
            tags:
                - model
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toOneRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toOneRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/model/{id}/PresetModels:
        get:
            operationId: fetch-Model-related-PresetModels
            description: Fetch the related "PresetModels" resource for "Model"
            tags:
                - model
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/include'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[connection]
                  required: false
                  description: Equality filter for "connection"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[settings]
                  required: false
                  description: Equality filter for "settings"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey]
                  required: false
                  description: Equality filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey$contains]
                  required: false
                  description: String contains filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey$icontains]
                  required: false
                  description: String case-insensitive contains filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey$search]
                  required: false
                  description: String full-text search filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey$startsWith]
                  required: false
                  description: String startsWith filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey$endsWith]
                  required: false
                  description: String endsWith filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[provider]
                  required: false
                  description: Equality filter for "provider"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Provider'
                - name: filter[status]
                  required: false
                  description: Equality filter for "status"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/ModelStatus'
                - name: filter[User]
                  required: false
                  description: Equality filter for "User"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[usedAt]
                  required: false
                  description: Equality filter for "usedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[usedAt$lt]
                  required: false
                  description: Less-than filter for "usedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[usedAt$lte]
                  required: false
                  description: Less-than or equal filter for "usedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[usedAt$gt]
                  required: false
                  description: Greater-than filter for "usedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[usedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "usedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[PresetModels]
                  required: false
                  description: Equality filter for "PresetModels"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/PresetModelListResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
    /zen/model/{id}/relationships/PresetModels:
        get:
            operationId: fetch-Model-relationship-PresetModels
            description: Fetch the "PresetModels" relationships for a "Model"
            tags:
                - model
            parameters:
                - $ref: '#/components/parameters/id'
                - $ref: '#/components/parameters/sort'
                - $ref: '#/components/parameters/page-offset'
                - $ref: '#/components/parameters/page-limit'
                - name: filter[id]
                  required: false
                  description: Id filter
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[connection]
                  required: false
                  description: Equality filter for "connection"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[settings]
                  required: false
                  description: Equality filter for "settings"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: json
                - name: filter[name]
                  required: false
                  description: Equality filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$contains]
                  required: false
                  description: String contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$icontains]
                  required: false
                  description: String case-insensitive contains filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$search]
                  required: false
                  description: String full-text search filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$startsWith]
                  required: false
                  description: String startsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[name$endsWith]
                  required: false
                  description: String endsWith filter for "name"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey]
                  required: false
                  description: Equality filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey$contains]
                  required: false
                  description: String contains filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey$icontains]
                  required: false
                  description: String case-insensitive contains filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey$search]
                  required: false
                  description: String full-text search filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey$startsWith]
                  required: false
                  description: String startsWith filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[apiKey$endsWith]
                  required: false
                  description: String endsWith filter for "apiKey"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[provider]
                  required: false
                  description: Equality filter for "provider"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/Provider'
                - name: filter[status]
                  required: false
                  description: Equality filter for "status"
                  in: query
                  style: form
                  explode: false
                  schema:
                      $ref: '#/components/schemas/ModelStatus'
                - name: filter[User]
                  required: false
                  description: Equality filter for "User"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                - name: filter[createdAt]
                  required: false
                  description: Equality filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lt]
                  required: false
                  description: Less-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$lte]
                  required: false
                  description: Less-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gt]
                  required: false
                  description: Greater-than filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[createdAt$gte]
                  required: false
                  description: Greater-than or equal filter for "createdAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt]
                  required: false
                  description: Equality filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lt]
                  required: false
                  description: Less-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$lte]
                  required: false
                  description: Less-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gt]
                  required: false
                  description: Greater-than filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[updatedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "updatedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[usedAt]
                  required: false
                  description: Equality filter for "usedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[usedAt$lt]
                  required: false
                  description: Less-than filter for "usedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[usedAt$lte]
                  required: false
                  description: Less-than or equal filter for "usedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[usedAt$gt]
                  required: false
                  description: Greater-than filter for "usedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[usedAt$gte]
                  required: false
                  description: Greater-than or equal filter for "usedAt"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: string
                      format: date-time
                - name: filter[PresetModels]
                  required: false
                  description: Equality filter for "PresetModels"
                  in: query
                  style: form
                  explode: false
                  schema:
                      type: array
                      items:
                          type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        put:
            operationId: update-Model-relationship-PresetModels-put
            description: Update "PresetModels" relationships for a "Model"
            tags:
                - model
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        patch:
            operationId: update-Model-relationship-PresetModels-patch
            description: Update "PresetModels" relationships for a "Model"
            tags:
                - model
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
        post:
            operationId: create-Model-relationship-PresetModels
            description: Create new "PresetModels" relationships for a "Model"
            tags:
                - model
            parameters:
                - $ref: '#/components/parameters/id'
            requestBody:
                content:
                    application/vnd.api+json:
                        schema:
                            $ref: '#/components/schemas/_toManyRelationshipRequest'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_toManyRelationshipResponse'
                '403':
                    description: Request is forbidden
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
                '404':
                    description: Resource is not found
                    content:
                        application/vnd.api+json:
                            schema:
                                $ref: '#/components/schemas/_errorResponse'
components:
    schemas:
        _jsonapi:
            type: object
            description: An object describing the server’s implementation
            required:
                - version
            properties:
                version:
                    type: string
        _meta:
            type: object
            description: Meta information about the request or response
            properties:
                serialization:
                    description: Superjson serialization metadata
            additionalProperties: true
        _resourceIdentifier:
            type: object
            description: Identifier for a resource
            required:
                - type
                - id
            properties:
                type:
                    type: string
                    description: Resource type
                id:
                    type: string
                    description: Resource id
        _resource:
            allOf:
                - $ref: '#/components/schemas/_resourceIdentifier'
                - type: object
                  description: A resource with attributes and relationships
                  properties:
                      attributes:
                          type: object
                          description: Resource attributes
                      relationships:
                          type: object
                          description: Resource relationships
        _links:
            type: object
            required:
                - self
            description: Links related to the resource
            properties:
                self:
                    type: string
                    description: Link for refetching the curent results
        _pagination:
            type: object
            description: Pagination information
            required:
                - first
                - last
                - prev
                - next
            properties:
                first:
                    oneOf:
                        - type: 'null'
                        - type: string
                          description: Link to the first page
                last:
                    oneOf:
                        - type: 'null'
                        - type: string
                          description: Link to the last page
                prev:
                    oneOf:
                        - type: 'null'
                        - type: string
                          description: Link to the previous page
                next:
                    oneOf:
                        - type: 'null'
                        - type: string
                          description: Link to the next page
        _errors:
            type: array
            description: An array of error objects
            items:
                type: object
                required:
                    - status
                    - code
                properties:
                    status:
                        type: string
                        description: HTTP status
                    code:
                        type: string
                        description: Error code
                    prismaCode:
                        type: string
                        description: Prisma error code if the error is thrown by Prisma
                    title:
                        type: string
                        description: Error title
                    detail:
                        type: string
                        description: Error detail
                    reason:
                        type: string
                        description: Detailed error reason
                    zodErrors:
                        type: object
                        additionalProperties: true
                        description: >-
                            Zod validation errors if the error is due to data validation
                            failure
        _errorResponse:
            type: object
            required:
                - errors
            description: An error response
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                errors:
                    $ref: '#/components/schemas/_errors'
        _relationLinks:
            type: object
            required:
                - self
                - related
            description: Links related to a relationship
            properties:
                self:
                    type: string
                    description: Link for fetching this relationship
                related:
                    type: string
                    description: Link for fetching the resource represented by this relationship
        _toOneRelationship:
            type: object
            description: A to-one relationship
            properties:
                data:
                    oneOf:
                        - type: 'null'
                        - $ref: '#/components/schemas/_resourceIdentifier'
        _toOneRelationshipWithLinks:
            type: object
            required:
                - links
                - data
            description: A to-one relationship with links
            properties:
                links:
                    $ref: '#/components/schemas/_relationLinks'
                data:
                    oneOf:
                        - type: 'null'
                        - $ref: '#/components/schemas/_resourceIdentifier'
        _toManyRelationship:
            type: object
            required:
                - data
            description: A to-many relationship
            properties:
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resourceIdentifier'
        _toManyRelationshipWithLinks:
            type: object
            required:
                - links
                - data
            description: A to-many relationship with links
            properties:
                links:
                    $ref: '#/components/schemas/_pagedRelationLinks'
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resourceIdentifier'
        _pagedRelationLinks:
            description: Relationship links with pagination information
            allOf:
                - $ref: '#/components/schemas/_pagination'
                - $ref: '#/components/schemas/_relationLinks'
        _toManyRelationshipRequest:
            type: object
            required:
                - data
            description: Input for manipulating a to-many relationship
            properties:
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resourceIdentifier'
        _toOneRelationshipRequest:
            description: Input for manipulating a to-one relationship
            oneOf:
                - type: 'null'
                - type: object
                  required:
                      - data
                  properties:
                      data:
                          $ref: '#/components/schemas/_resourceIdentifier'
        _toManyRelationshipResponse:
            description: Response for a to-many relationship
            allOf:
                - $ref: '#/components/schemas/_toManyRelationshipWithLinks'
                - type: object
                  properties:
                      jsonapi:
                          $ref: '#/components/schemas/_jsonapi'
        _toOneRelationshipResponse:
            description: Response for a to-one relationship
            allOf:
                - $ref: '#/components/schemas/_toOneRelationshipWithLinks'
                - type: object
                  properties:
                      jsonapi:
                          $ref: '#/components/schemas/_jsonapi'
        Role:
            type: string
            description: The "Role" Enum
            enum:
                - superadmin
                - admin
                - authenticated
        Visibility:
            type: string
            description: The "Visibility" Enum
            enum:
                - public
                - private
        InputSource:
            type: string
            description: The "InputSource" Enum
            enum:
                - manual
                - file
        AnalysisStatus:
            type: string
            description: The "AnalysisStatus" Enum
            enum:
                - pending
                - analyzing
                - done
                - error
        ModelRole:
            type: string
            description: The "ModelRole" Enum
            enum:
                - primary
                - secondary
        Provider:
            type: string
            description: The "Provider" Enum
            enum:
                - local
                - openai
        ModelStatus:
            type: string
            description: The "ModelStatus" Enum
            enum:
                - active
                - connecting
                - error
                - inactive
        User:
            type: object
            description: The "User" model
            required:
                - id
                - type
                - attributes
            properties:
                id:
                    type: string
                type:
                    type: string
                attributes:
                    type: object
                    required:
                        - name
                        - email
                        - emailVerified
                        - image
                        - isAnonymous
                        - loggedAt
                        - role
                        - createdAt
                        - updatedAt
                    properties:
                        name:
                            type: string
                        email:
                            type: string
                        emailVerified:
                            type: boolean
                        image:
                            oneOf:
                                - type: 'null'
                                - type: string
                        isAnonymous:
                            oneOf:
                                - type: 'null'
                                - type: boolean
                        loggedAt:
                            oneOf:
                                - type: 'null'
                                - type: string
                                  format: date-time
                        role:
                            $ref: '#/components/schemas/Role'
                        createdAt:
                            type: string
                            format: date-time
                        updatedAt:
                            type: string
                            format: date-time
                relationships:
                    type: object
                    properties:
                        Analyses:
                            $ref: '#/components/schemas/_toManyRelationshipWithLinks'
                        Models:
                            $ref: '#/components/schemas/_toManyRelationshipWithLinks'
                        Presets:
                            $ref: '#/components/schemas/_toManyRelationshipWithLinks'
                        sessions:
                            $ref: '#/components/schemas/_toManyRelationshipWithLinks'
                        accounts:
                            $ref: '#/components/schemas/_toManyRelationshipWithLinks'
        UserCreateRequest:
            type: object
            description: Input for creating a "User"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "User" model
                    required:
                        - type
                        - attributes
                    properties:
                        type:
                            type: string
                        attributes:
                            type: object
                            required:
                                - name
                                - email
                                - emailVerified
                                - updatedAt
                            properties:
                                name:
                                    type: string
                                email:
                                    type: string
                                emailVerified:
                                    type: boolean
                                image:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                isAnonymous:
                                    oneOf:
                                        - type: 'null'
                                        - type: boolean
                                loggedAt:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                          format: date-time
                                role:
                                    $ref: '#/components/schemas/Role'
                                createdAt:
                                    type: string
                                    format: date-time
                                updatedAt:
                                    type: string
                                    format: date-time
                        relationships:
                            type: object
                            properties:
                                Analyses:
                                    $ref: '#/components/schemas/_toManyRelationship'
                                Models:
                                    $ref: '#/components/schemas/_toManyRelationship'
                                Presets:
                                    $ref: '#/components/schemas/_toManyRelationship'
                                sessions:
                                    $ref: '#/components/schemas/_toManyRelationship'
                                accounts:
                                    $ref: '#/components/schemas/_toManyRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        UserUpdateRequest:
            type: object
            description: Input for updating a "User"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "User" model
                    required:
                        - id
                        - type
                        - attributes
                    properties:
                        id:
                            type: string
                        type:
                            type: string
                        attributes:
                            type: object
                            properties:
                                name:
                                    type: string
                                email:
                                    type: string
                                emailVerified:
                                    type: boolean
                                image:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                isAnonymous:
                                    oneOf:
                                        - type: 'null'
                                        - type: boolean
                                loggedAt:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                          format: date-time
                                role:
                                    $ref: '#/components/schemas/Role'
                                createdAt:
                                    type: string
                                    format: date-time
                                updatedAt:
                                    type: string
                                    format: date-time
                        relationships:
                            type: object
                            properties:
                                Analyses:
                                    $ref: '#/components/schemas/_toManyRelationship'
                                Models:
                                    $ref: '#/components/schemas/_toManyRelationship'
                                Presets:
                                    $ref: '#/components/schemas/_toManyRelationship'
                                sessions:
                                    $ref: '#/components/schemas/_toManyRelationship'
                                accounts:
                                    $ref: '#/components/schemas/_toManyRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        UserResponse:
            type: object
            description: Response for a "User"
            required:
                - data
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    allOf:
                        - $ref: '#/components/schemas/User'
                        - type: object
                          properties:
                              relationships:
                                  type: object
                                  properties: &ref_0
                                      Analyses:
                                          $ref: '#/components/schemas/_toManyRelationship'
                                      Models:
                                          $ref: '#/components/schemas/_toManyRelationship'
                                      Presets:
                                          $ref: '#/components/schemas/_toManyRelationship'
                                      sessions:
                                          $ref: '#/components/schemas/_toManyRelationship'
                                      accounts:
                                          $ref: '#/components/schemas/_toManyRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    $ref: '#/components/schemas/_links'
        UserListResponse:
            type: object
            description: Response for a list of "User"
            required:
                - data
                - links
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    type: array
                    items:
                        allOf:
                            - $ref: '#/components/schemas/User'
                            - type: object
                              properties:
                                  relationships:
                                      type: object
                                      properties: *ref_0
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    allOf:
                        - $ref: '#/components/schemas/_links'
                        - $ref: '#/components/schemas/_pagination'
        Session:
            type: object
            description: The "Session" model
            required:
                - id
                - type
                - attributes
            properties:
                id:
                    type: string
                type:
                    type: string
                attributes:
                    type: object
                    required:
                        - expiresAt
                        - token
                        - createdAt
                        - updatedAt
                        - ipAddress
                        - userAgent
                        - lang
                        - userId
                    properties:
                        expiresAt:
                            type: string
                            format: date-time
                        token:
                            type: string
                        createdAt:
                            type: string
                            format: date-time
                        updatedAt:
                            type: string
                            format: date-time
                        ipAddress:
                            oneOf:
                                - type: 'null'
                                - type: string
                        userAgent:
                            oneOf:
                                - type: 'null'
                                - type: string
                        lang:
                            type: string
                        userId:
                            type: string
                relationships:
                    type: object
                    properties:
                        user:
                            $ref: '#/components/schemas/_toOneRelationshipWithLinks'
        SessionCreateRequest:
            type: object
            description: Input for creating a "Session"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "Session" model
                    required:
                        - id
                        - type
                        - attributes
                    properties:
                        id:
                            type: string
                        type:
                            type: string
                        attributes:
                            type: object
                            required:
                                - expiresAt
                                - token
                                - createdAt
                                - updatedAt
                            properties:
                                expiresAt:
                                    type: string
                                    format: date-time
                                token:
                                    type: string
                                createdAt:
                                    type: string
                                    format: date-time
                                updatedAt:
                                    type: string
                                    format: date-time
                                ipAddress:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                userAgent:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                lang:
                                    type: string
                        relationships:
                            type: object
                            properties:
                                user:
                                    $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        SessionUpdateRequest:
            type: object
            description: Input for updating a "Session"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "Session" model
                    required:
                        - id
                        - type
                        - attributes
                    properties:
                        id:
                            type: string
                        type:
                            type: string
                        attributes:
                            type: object
                            properties:
                                expiresAt:
                                    type: string
                                    format: date-time
                                token:
                                    type: string
                                createdAt:
                                    type: string
                                    format: date-time
                                updatedAt:
                                    type: string
                                    format: date-time
                                ipAddress:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                userAgent:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                lang:
                                    type: string
                        relationships:
                            type: object
                            properties:
                                user:
                                    $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        SessionResponse:
            type: object
            description: Response for a "Session"
            required:
                - data
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    allOf:
                        - $ref: '#/components/schemas/Session'
                        - type: object
                          properties:
                              relationships:
                                  type: object
                                  properties: &ref_1
                                      user:
                                          $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    $ref: '#/components/schemas/_links'
        SessionListResponse:
            type: object
            description: Response for a list of "Session"
            required:
                - data
                - links
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    type: array
                    items:
                        allOf:
                            - $ref: '#/components/schemas/Session'
                            - type: object
                              properties:
                                  relationships:
                                      type: object
                                      properties: *ref_1
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    allOf:
                        - $ref: '#/components/schemas/_links'
                        - $ref: '#/components/schemas/_pagination'
        Account:
            type: object
            description: The "Account" model
            required:
                - id
                - type
                - attributes
            properties:
                id:
                    type: string
                type:
                    type: string
                attributes:
                    type: object
                    required:
                        - accountId
                        - providerId
                        - userId
                        - accessToken
                        - refreshToken
                        - idToken
                        - accessTokenExpiresAt
                        - refreshTokenExpiresAt
                        - scope
                        - password
                        - createdAt
                        - updatedAt
                    properties:
                        accountId:
                            type: string
                        providerId:
                            type: string
                        userId:
                            type: string
                        accessToken:
                            oneOf:
                                - type: 'null'
                                - type: string
                        refreshToken:
                            oneOf:
                                - type: 'null'
                                - type: string
                        idToken:
                            oneOf:
                                - type: 'null'
                                - type: string
                        accessTokenExpiresAt:
                            oneOf:
                                - type: 'null'
                                - type: string
                                  format: date-time
                        refreshTokenExpiresAt:
                            oneOf:
                                - type: 'null'
                                - type: string
                                  format: date-time
                        scope:
                            oneOf:
                                - type: 'null'
                                - type: string
                        password:
                            oneOf:
                                - type: 'null'
                                - type: string
                        createdAt:
                            type: string
                            format: date-time
                        updatedAt:
                            type: string
                            format: date-time
                relationships:
                    type: object
                    properties:
                        user:
                            $ref: '#/components/schemas/_toOneRelationshipWithLinks'
        AccountCreateRequest:
            type: object
            description: Input for creating a "Account"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "Account" model
                    required:
                        - id
                        - type
                        - attributes
                    properties:
                        id:
                            type: string
                        type:
                            type: string
                        attributes:
                            type: object
                            required:
                                - accountId
                                - providerId
                                - createdAt
                                - updatedAt
                            properties:
                                accountId:
                                    type: string
                                providerId:
                                    type: string
                                accessToken:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                refreshToken:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                idToken:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                accessTokenExpiresAt:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                          format: date-time
                                refreshTokenExpiresAt:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                          format: date-time
                                scope:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                password:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                createdAt:
                                    type: string
                                    format: date-time
                                updatedAt:
                                    type: string
                                    format: date-time
                        relationships:
                            type: object
                            properties:
                                user:
                                    $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        AccountUpdateRequest:
            type: object
            description: Input for updating a "Account"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "Account" model
                    required:
                        - id
                        - type
                        - attributes
                    properties:
                        id:
                            type: string
                        type:
                            type: string
                        attributes:
                            type: object
                            properties:
                                accountId:
                                    type: string
                                providerId:
                                    type: string
                                accessToken:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                refreshToken:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                idToken:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                accessTokenExpiresAt:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                          format: date-time
                                refreshTokenExpiresAt:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                          format: date-time
                                scope:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                password:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                createdAt:
                                    type: string
                                    format: date-time
                                updatedAt:
                                    type: string
                                    format: date-time
                        relationships:
                            type: object
                            properties:
                                user:
                                    $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        AccountResponse:
            type: object
            description: Response for a "Account"
            required:
                - data
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    allOf:
                        - $ref: '#/components/schemas/Account'
                        - type: object
                          properties:
                              relationships:
                                  type: object
                                  properties: &ref_2
                                      user:
                                          $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    $ref: '#/components/schemas/_links'
        AccountListResponse:
            type: object
            description: Response for a list of "Account"
            required:
                - data
                - links
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    type: array
                    items:
                        allOf:
                            - $ref: '#/components/schemas/Account'
                            - type: object
                              properties:
                                  relationships:
                                      type: object
                                      properties: *ref_2
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    allOf:
                        - $ref: '#/components/schemas/_links'
                        - $ref: '#/components/schemas/_pagination'
        Verification:
            type: object
            description: The "Verification" model
            required:
                - id
                - type
                - attributes
            properties:
                id:
                    type: string
                type:
                    type: string
                attributes:
                    type: object
                    required:
                        - identifier
                        - value
                        - expiresAt
                        - createdAt
                        - updatedAt
                    properties:
                        identifier:
                            type: string
                        value:
                            type: string
                        expiresAt:
                            type: string
                            format: date-time
                        createdAt:
                            oneOf:
                                - type: 'null'
                                - type: string
                                  format: date-time
                        updatedAt:
                            oneOf:
                                - type: 'null'
                                - type: string
                                  format: date-time
        VerificationCreateRequest:
            type: object
            description: Input for creating a "Verification"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "Verification" model
                    required:
                        - id
                        - type
                        - attributes
                    properties:
                        id:
                            type: string
                        type:
                            type: string
                        attributes:
                            type: object
                            required:
                                - identifier
                                - value
                                - expiresAt
                            properties:
                                identifier:
                                    type: string
                                value:
                                    type: string
                                expiresAt:
                                    type: string
                                    format: date-time
                                createdAt:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                          format: date-time
                                updatedAt:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                          format: date-time
                meta:
                    $ref: '#/components/schemas/_meta'
        VerificationUpdateRequest:
            type: object
            description: Input for updating a "Verification"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "Verification" model
                    required:
                        - id
                        - type
                        - attributes
                    properties:
                        id:
                            type: string
                        type:
                            type: string
                        attributes:
                            type: object
                            properties:
                                identifier:
                                    type: string
                                value:
                                    type: string
                                expiresAt:
                                    type: string
                                    format: date-time
                                createdAt:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                          format: date-time
                                updatedAt:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                          format: date-time
                meta:
                    $ref: '#/components/schemas/_meta'
        VerificationResponse:
            type: object
            description: Response for a "Verification"
            required:
                - data
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    allOf:
                        - $ref: '#/components/schemas/Verification'
                        - type: object
                          properties:
                              relationships:
                                  type: object
                                  properties: &ref_3 {}
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    $ref: '#/components/schemas/_links'
        VerificationListResponse:
            type: object
            description: Response for a list of "Verification"
            required:
                - data
                - links
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    type: array
                    items:
                        allOf:
                            - $ref: '#/components/schemas/Verification'
                            - type: object
                              properties:
                                  relationships:
                                      type: object
                                      properties: *ref_3
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    allOf:
                        - $ref: '#/components/schemas/_links'
                        - $ref: '#/components/schemas/_pagination'
        Analysis:
            type: object
            description: The "Analysis" model
            required:
                - id
                - type
                - attributes
            properties:
                id:
                    type: string
                type:
                    type: string
                attributes:
                    type: object
                    required:
                        - originalText
                        - modifiedTextAlternatives
                        - biasedTerms
                        - biasedMetaphors
                        - additionalContextEvaluation
                        - impactAnalysis
                        - conclusion
                        - name
                        - visibility
                        - status
                        - inputSource
                        - userId
                        - createdAt
                        - updatedAt
                    properties:
                        originalText:
                            type: string
                        modifiedTextAlternatives:
                            type: array
                            items:
                                $ref: '#/components/schemas/ModifiedAlternative'
                        biasedTerms:
                            type: array
                            items:
                                $ref: '#/components/schemas/BiasedTerm'
                        biasedMetaphors:
                            type: array
                            items:
                                $ref: '#/components/schemas/BiasedMetaphor'
                        additionalContextEvaluation:
                            oneOf:
                                - type: 'null'
                                - $ref: '#/components/schemas/AdditionalContextEvaluation'
                        impactAnalysis:
                            oneOf:
                                - type: 'null'
                                - $ref: '#/components/schemas/ImpactAnalysis'
                        conclusion:
                            oneOf:
                                - type: 'null'
                                - type: string
                        name:
                            oneOf:
                                - type: 'null'
                                - type: string
                        visibility:
                            $ref: '#/components/schemas/Visibility'
                        status:
                            $ref: '#/components/schemas/AnalysisStatus'
                        inputSource:
                            $ref: '#/components/schemas/InputSource'
                        userId:
                            oneOf:
                                - type: 'null'
                                - type: string
                        createdAt:
                            type: string
                            format: date-time
                        updatedAt:
                            type: string
                            format: date-time
                relationships:
                    type: object
                    properties:
                        Presets:
                            $ref: '#/components/schemas/_toManyRelationshipWithLinks'
                        User:
                            oneOf:
                                - type: 'null'
                                - $ref: '#/components/schemas/_toOneRelationshipWithLinks'
        AnalysisCreateRequest:
            type: object
            description: Input for creating a "Analysis"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "Analysis" model
                    required:
                        - type
                        - attributes
                    properties:
                        type:
                            type: string
                        attributes:
                            type: object
                            required:
                                - originalText
                                - modifiedTextAlternatives
                                - biasedTerms
                                - biasedMetaphors
                                - updatedAt
                            properties:
                                originalText:
                                    type: string
                                modifiedTextAlternatives:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/ModifiedAlternative'
                                biasedTerms:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/BiasedTerm'
                                biasedMetaphors:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/BiasedMetaphor'
                                additionalContextEvaluation:
                                    oneOf:
                                        - type: 'null'
                                        - $ref: '#/components/schemas/AdditionalContextEvaluation'
                                impactAnalysis:
                                    oneOf:
                                        - type: 'null'
                                        - $ref: '#/components/schemas/ImpactAnalysis'
                                conclusion:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                name:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                visibility:
                                    $ref: '#/components/schemas/Visibility'
                                status:
                                    $ref: '#/components/schemas/AnalysisStatus'
                                inputSource:
                                    $ref: '#/components/schemas/InputSource'
                                createdAt:
                                    type: string
                                    format: date-time
                                updatedAt:
                                    type: string
                                    format: date-time
                        relationships:
                            type: object
                            properties:
                                Presets:
                                    $ref: '#/components/schemas/_toManyRelationship'
                                User:
                                    oneOf:
                                        - type: 'null'
                                        - $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        AnalysisUpdateRequest:
            type: object
            description: Input for updating a "Analysis"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "Analysis" model
                    required:
                        - id
                        - type
                        - attributes
                    properties:
                        id:
                            type: string
                        type:
                            type: string
                        attributes:
                            type: object
                            properties:
                                originalText:
                                    type: string
                                modifiedTextAlternatives:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/ModifiedAlternative'
                                biasedTerms:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/BiasedTerm'
                                biasedMetaphors:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/BiasedMetaphor'
                                additionalContextEvaluation:
                                    oneOf:
                                        - type: 'null'
                                        - $ref: '#/components/schemas/AdditionalContextEvaluation'
                                impactAnalysis:
                                    oneOf:
                                        - type: 'null'
                                        - $ref: '#/components/schemas/ImpactAnalysis'
                                conclusion:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                name:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                visibility:
                                    $ref: '#/components/schemas/Visibility'
                                status:
                                    $ref: '#/components/schemas/AnalysisStatus'
                                inputSource:
                                    $ref: '#/components/schemas/InputSource'
                                createdAt:
                                    type: string
                                    format: date-time
                                updatedAt:
                                    type: string
                                    format: date-time
                        relationships:
                            type: object
                            properties:
                                Presets:
                                    $ref: '#/components/schemas/_toManyRelationship'
                                User:
                                    oneOf:
                                        - type: 'null'
                                        - $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        AnalysisResponse:
            type: object
            description: Response for a "Analysis"
            required:
                - data
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    allOf:
                        - $ref: '#/components/schemas/Analysis'
                        - type: object
                          properties:
                              relationships:
                                  type: object
                                  properties: &ref_4
                                      Presets:
                                          $ref: '#/components/schemas/_toManyRelationship'
                                      User:
                                          $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    $ref: '#/components/schemas/_links'
        AnalysisListResponse:
            type: object
            description: Response for a list of "Analysis"
            required:
                - data
                - links
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    type: array
                    items:
                        allOf:
                            - $ref: '#/components/schemas/Analysis'
                            - type: object
                              properties:
                                  relationships:
                                      type: object
                                      properties: *ref_4
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    allOf:
                        - $ref: '#/components/schemas/_links'
                        - $ref: '#/components/schemas/_pagination'
        Preset:
            type: object
            description: The "Preset" model
            required:
                - id
                - type
                - attributes
            properties:
                id:
                    type: string
                type:
                    type: string
                attributes:
                    type: object
                    required:
                        - userId
                    properties:
                        userId:
                            type: string
                relationships:
                    type: object
                    properties:
                        Models:
                            $ref: '#/components/schemas/_toManyRelationshipWithLinks'
                        User:
                            $ref: '#/components/schemas/_toOneRelationshipWithLinks'
                        Analysis:
                            $ref: '#/components/schemas/_toManyRelationshipWithLinks'
        PresetCreateRequest:
            type: object
            description: Input for creating a "Preset"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "Preset" model
                    required:
                        - type
                        - attributes
                    properties:
                        type:
                            type: string
                        attributes:
                            type: object
                            properties: {}
                        relationships:
                            type: object
                            properties:
                                Models:
                                    $ref: '#/components/schemas/_toManyRelationship'
                                User:
                                    $ref: '#/components/schemas/_toOneRelationship'
                                Analysis:
                                    $ref: '#/components/schemas/_toManyRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        PresetUpdateRequest:
            type: object
            description: Input for updating a "Preset"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "Preset" model
                    required:
                        - id
                        - type
                        - attributes
                    properties:
                        id:
                            type: string
                        type:
                            type: string
                        attributes:
                            type: object
                            properties: {}
                        relationships:
                            type: object
                            properties:
                                Models:
                                    $ref: '#/components/schemas/_toManyRelationship'
                                User:
                                    $ref: '#/components/schemas/_toOneRelationship'
                                Analysis:
                                    $ref: '#/components/schemas/_toManyRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        PresetResponse:
            type: object
            description: Response for a "Preset"
            required:
                - data
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    allOf:
                        - $ref: '#/components/schemas/Preset'
                        - type: object
                          properties:
                              relationships:
                                  type: object
                                  properties: &ref_5
                                      Models:
                                          $ref: '#/components/schemas/_toManyRelationship'
                                      User:
                                          $ref: '#/components/schemas/_toOneRelationship'
                                      Analysis:
                                          $ref: '#/components/schemas/_toManyRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    $ref: '#/components/schemas/_links'
        PresetListResponse:
            type: object
            description: Response for a list of "Preset"
            required:
                - data
                - links
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    type: array
                    items:
                        allOf:
                            - $ref: '#/components/schemas/Preset'
                            - type: object
                              properties:
                                  relationships:
                                      type: object
                                      properties: *ref_5
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    allOf:
                        - $ref: '#/components/schemas/_links'
                        - $ref: '#/components/schemas/_pagination'
        PresetModel:
            type: object
            description: The "PresetModel" model
            required:
                - id
                - type
                - attributes
            properties:
                id:
                    type: string
                type:
                    type: string
                attributes:
                    type: object
                    required:
                        - role
                        - presetId
                        - modelId
                    properties:
                        role:
                            $ref: '#/components/schemas/ModelRole'
                        presetId:
                            type: string
                        modelId:
                            type: string
                relationships:
                    type: object
                    properties:
                        Preset:
                            $ref: '#/components/schemas/_toOneRelationshipWithLinks'
                        Model:
                            $ref: '#/components/schemas/_toOneRelationshipWithLinks'
        PresetModelListResponse:
            type: object
            description: Response for a list of "PresetModel"
            required:
                - data
                - links
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    type: array
                    items:
                        allOf:
                            - $ref: '#/components/schemas/PresetModel'
                            - type: object
                              properties:
                                  relationships:
                                      type: object
                                      properties:
                                          Preset:
                                              $ref: '#/components/schemas/_toOneRelationship'
                                          Model:
                                              $ref: '#/components/schemas/_toOneRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    allOf:
                        - $ref: '#/components/schemas/_links'
                        - $ref: '#/components/schemas/_pagination'
        Model:
            type: object
            description: The "Model" model
            required:
                - id
                - type
                - attributes
            properties:
                id:
                    type: string
                type:
                    type: string
                attributes:
                    type: object
                    required:
                        - connection
                        - settings
                        - name
                        - apiKey
                        - provider
                        - status
                        - userId
                        - createdAt
                        - updatedAt
                        - usedAt
                    properties:
                        connection:
                            $ref: '#/components/schemas/Connection'
                        settings:
                            $ref: '#/components/schemas/Settings'
                        name:
                            type: string
                        apiKey:
                            oneOf:
                                - type: 'null'
                                - type: string
                        provider:
                            $ref: '#/components/schemas/Provider'
                        status:
                            $ref: '#/components/schemas/ModelStatus'
                        userId:
                            type: string
                        createdAt:
                            type: string
                            format: date-time
                        updatedAt:
                            type: string
                            format: date-time
                        usedAt:
                            oneOf:
                                - type: 'null'
                                - type: string
                                  format: date-time
                relationships:
                    type: object
                    properties:
                        User:
                            $ref: '#/components/schemas/_toOneRelationshipWithLinks'
                        PresetModels:
                            $ref: '#/components/schemas/_toManyRelationshipWithLinks'
        ModelCreateRequest:
            type: object
            description: Input for creating a "Model"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "Model" model
                    required:
                        - type
                        - attributes
                    properties:
                        type:
                            type: string
                        attributes:
                            type: object
                            required:
                                - connection
                                - settings
                                - name
                                - provider
                                - updatedAt
                            properties:
                                connection:
                                    $ref: '#/components/schemas/Connection'
                                settings:
                                    $ref: '#/components/schemas/Settings'
                                name:
                                    type: string
                                apiKey:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                provider:
                                    $ref: '#/components/schemas/Provider'
                                status:
                                    $ref: '#/components/schemas/ModelStatus'
                                createdAt:
                                    type: string
                                    format: date-time
                                updatedAt:
                                    type: string
                                    format: date-time
                                usedAt:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                          format: date-time
                        relationships:
                            type: object
                            properties:
                                User:
                                    $ref: '#/components/schemas/_toOneRelationship'
                                PresetModels:
                                    $ref: '#/components/schemas/_toManyRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        ModelUpdateRequest:
            type: object
            description: Input for updating a "Model"
            required:
                - data
            properties:
                data:
                    type: object
                    description: The "Model" model
                    required:
                        - id
                        - type
                        - attributes
                    properties:
                        id:
                            type: string
                        type:
                            type: string
                        attributes:
                            type: object
                            properties:
                                connection:
                                    $ref: '#/components/schemas/Connection'
                                settings:
                                    $ref: '#/components/schemas/Settings'
                                name:
                                    type: string
                                apiKey:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                provider:
                                    $ref: '#/components/schemas/Provider'
                                status:
                                    $ref: '#/components/schemas/ModelStatus'
                                createdAt:
                                    type: string
                                    format: date-time
                                updatedAt:
                                    type: string
                                    format: date-time
                                usedAt:
                                    oneOf:
                                        - type: 'null'
                                        - type: string
                                          format: date-time
                        relationships:
                            type: object
                            properties:
                                User:
                                    $ref: '#/components/schemas/_toOneRelationship'
                                PresetModels:
                                    $ref: '#/components/schemas/_toManyRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
        ModelResponse:
            type: object
            description: Response for a "Model"
            required:
                - data
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    allOf:
                        - $ref: '#/components/schemas/Model'
                        - type: object
                          properties:
                              relationships:
                                  type: object
                                  properties: &ref_6
                                      User:
                                          $ref: '#/components/schemas/_toOneRelationship'
                                      PresetModels:
                                          $ref: '#/components/schemas/_toManyRelationship'
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    $ref: '#/components/schemas/_links'
        ModelListResponse:
            type: object
            description: Response for a list of "Model"
            required:
                - data
                - links
            properties:
                jsonapi:
                    $ref: '#/components/schemas/_jsonapi'
                data:
                    type: array
                    items:
                        allOf:
                            - $ref: '#/components/schemas/Model'
                            - type: object
                              properties:
                                  relationships:
                                      type: object
                                      properties: *ref_6
                meta:
                    $ref: '#/components/schemas/_meta'
                included:
                    type: array
                    items:
                        $ref: '#/components/schemas/_resource'
                links:
                    allOf:
                        - $ref: '#/components/schemas/_links'
                        - $ref: '#/components/schemas/_pagination'
        BiasedTerm:
            type: object
            description: The "BiasedTerm" TypeDef
            properties:
                content:
                    type: string
                influencePercentage:
                    type: number
                explanation:
                    type: string
                category:
                    type: string
        BiasedMetaphor:
            type: object
            description: The "BiasedMetaphor" TypeDef
            properties:
                content:
                    type: string
                influencePercentage:
                    type: number
                explanation:
                    type: string
                historicalContext:
                    type: string
        AdditionalContextEvaluation:
            type: object
            description: The "AdditionalContextEvaluation" TypeDef
            properties:
                stereotype:
                    $ref: '#/components/schemas/AdditionalContextEvaluationItem'
                powerAsymmetry:
                    $ref: '#/components/schemas/AdditionalContextEvaluationItem'
                genderRepresentationAbsence:
                    $ref: '#/components/schemas/AdditionalContextGenderRepresentationAbsence'
                intersectionality:
                    $ref: '#/components/schemas/AdditionalContextIntersectionality'
                systemicBiases:
                    $ref: '#/components/schemas/AdditionalContextEvaluationItem'
        AdditionalContextEvaluationItem:
            type: object
            description: The "AdditionalContextEvaluationItem" TypeDef
            properties:
                presence:
                    type: boolean
                influencePercentage:
                    type: number
                examples:
                    type: array
                    items:
                        type: string
                explanation:
                    type: string
        AdditionalContextGenderRepresentationAbsence:
            type: object
            description: The "AdditionalContextGenderRepresentationAbsence" TypeDef
            properties:
                presence:
                    type: boolean
                influencePercentage:
                    type: number
                explanation:
                    type: string
                affectedGroups:
                    type: array
                    items:
                        type: string
        AdditionalContextIntersectionality:
            type: object
            description: The "AdditionalContextIntersectionality" TypeDef
            properties:
                presence:
                    type: boolean
                influencePercentage:
                    type: number
                explanation:
                    type: string
                excludedGroups:
                    type: array
                    items:
                        type: string
        ImpactAnalysis:
            type: object
            description: The "ImpactAnalysis" TypeDef
            properties:
                accessToCare:
                    $ref: '#/components/schemas/ImpactAnalysisItem'
                stigmatization:
                    $ref: '#/components/schemas/ImpactAnalysisItem'
        ImpactAnalysisItem:
            type: object
            description: The "ImpactAnalysisItem" TypeDef
            properties:
                affected:
                    type: boolean
                description:
                    type: string
        ModifiedAlternative:
            type: object
            description: The "ModifiedAlternative" TypeDef
            properties:
                alternativeNumber:
                    type: integer
                alternativeText:
                    type: string
                modificationsExplanation:
                    type: array
                    items:
                        $ref: '#/components/schemas/ModificationItem'
        ModificationItem:
            type: object
            description: The "ModificationItem" TypeDef
            properties:
                originalFragment:
                    type: string
                modifiedFragment:
                    type: string
                reason:
                    type: string
        Connection:
            type: object
            description: The "Connection" TypeDef
            properties:
                identifier:
                    type: string
                url:
                    type: string
        Settings:
            type: object
            description: The "Settings" TypeDef
            properties:
                temperature:
                    type: number
    parameters:
        id:
            name: id
            in: path
            description: The resource id
            required: true
            schema:
                type: string
        include:
            name: include
            in: query
            description: Relationships to include
            required: false
            style: form
            schema:
                type: string
        sort:
            name: sort
            in: query
            description: Fields to sort by
            required: false
            style: form
            schema:
                type: string
        page-offset:
            name: page[offset]
            in: query
            description: Offset for pagination
            required: false
            style: form
            schema:
                type: integer
        page-limit:
            name: page[limit]
            in: query
            description: Limit for pagination
            required: false
            style: form
            schema:
                type: integer
    securitySchemes:
        apiKey:
            type: apiKey
            in: cookie
            name: better-auth.session
security:
    - apiKey: []
