import "user"
import "preset"

model Model {
    id           String        @id @default(cuid())
    connection   Connection    @json
    settings     Settings      @json
    name         String
    apiKey       String?       @encrypted
    provider     Provider

    User         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId       String        @default(auth().id)

    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt
    usedAt       DateTime?

    PresetModels PresetModel[]

    // Owners can do anything
    @@allow("all",auth()==User)

    // Admins can delete models
    @@allow('delete', auth().role == admin)
}

enum Provider {
    local
    openai
}

type Connection {
    identifier String
    url        String           @url("Connection url must me a valid URL")
    status     ConnectionStatus
}

enum ConnectionStatus {
    active
    inactive
    error
}

type Settings {
    temperature Float

    @@validate(temperature < 0 || temperature > 10, "Temperature must be in range of 0 to 10")
}