import "user"
import "preset"

model Model {
    id           String        @id @default(cuid())
    connection   Connection    @json
    settings     Settings      @json
    name         String
    apiKey       String?       @encrypted

    status       ModelStatus   @default(inactive) @allow("update", true, true)
    error        ModelError?   @allow("update", true, true)

    User         User?         @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId       String?       @default(auth().id)

    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt
    usedAt       DateTime?

    isDefault    Boolean       @default(false)

    PresetModels PresetModel[]

    // Owners can do anything
    @@allow("all",auth()==User)

    // Admins can delete models
    @@allow('delete', auth().role == admin)

    // Default models can be view by everybody
    @@allow('read', isDefault)
}

type Connection {
    identifier String
    url        String @url("Connection url must me a valid URL")
}

enum ModelStatus {
    active
    connecting
    error
    inactive
}

type Settings {
    temperature Float

    @@validate(temperature > 0 || temperature <= 1, "Temperature must be in range of 0 to 1")
}

enum ModelError {
    INVALID_API_KEY
    INVALID_IDENTIFIER
    INVALID_CONNECTION_URL
    INACTIVE_MODEL
    MAX_ATTEMPTS_REACHED
}