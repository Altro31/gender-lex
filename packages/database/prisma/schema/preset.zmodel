import "model"
import "user"
import "analysis"

model Preset {

    id          String        @id @default(cuid())
    name        String
    description String?

    Models      PresetModel[]

    User        User?         @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId      String?       @default(auth().id)

    Analysis    Analysis[]

    isDefault   Boolean       @default(false)

    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
    usedAt      DateTime?

    // Owners can do anything
    @@allow("all",auth()==User)

    // Admins can delete presets
    @@allow('delete', auth().role == admin)

    // Default presets can be view by everybody
    @@allow('read', isDefault)
}

model PresetModel {

    id        String    @id @default(cuid())

    isDefault Boolean   @default(false)

    role      ModelRole

    Preset    Preset    @relation(fields: [presetId], references: [id], onDelete: Cascade)
    presetId  String

    Model     Model     @relation(fields: [modelId], references: [id], onDelete: Cascade)
    modelId   String


    // Default presetModels can be view by everybody
    // @@allow("read",isDefault)

    // Owners can do anything
    // @@allow("all",auth()==Preset.User)
    @@allow("all",true)


    @@openapi.ignore()
}

enum ModelRole {
    primary
    secondary
}