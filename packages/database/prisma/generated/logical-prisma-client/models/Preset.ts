/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `Preset` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from '@prisma/client/runtime/client'
import type * as $Enums from '../enums.ts'
import type * as Prisma from '../internal/prismaNamespace.ts'
/**
 * Model Preset
 * @
 * @allow ('all', auth() == User)
 * @
 * @allow ('delete', auth().role == admin)
 * @
 * @allow ('read', isDefault)
 */
export type PresetModel =
	runtime.Types.Result.DefaultSelection<Prisma.$PresetPayload>
export type AggregatePreset = {
	_count: PresetCountAggregateOutputType | null
	_min: PresetMinAggregateOutputType | null
	_max: PresetMaxAggregateOutputType | null
}
export type PresetMinAggregateOutputType = {
	id: string | null
	name: string | null
	description: string | null
	userId: string | null
	isDefault: boolean | null
	createdAt: Date | null
	updatedAt: Date | null
	usedAt: Date | null
}
export type PresetMaxAggregateOutputType = {
	id: string | null
	name: string | null
	description: string | null
	userId: string | null
	isDefault: boolean | null
	createdAt: Date | null
	updatedAt: Date | null
	usedAt: Date | null
}
export type PresetCountAggregateOutputType = {
	id: number
	name: number
	description: number
	userId: number
	isDefault: number
	createdAt: number
	updatedAt: number
	usedAt: number
	_all: number
}
export type PresetMinAggregateInputType = {
	id?: true
	name?: true
	description?: true
	userId?: true
	isDefault?: true
	createdAt?: true
	updatedAt?: true
	usedAt?: true
}
export type PresetMaxAggregateInputType = {
	id?: true
	name?: true
	description?: true
	userId?: true
	isDefault?: true
	createdAt?: true
	updatedAt?: true
	usedAt?: true
}
export type PresetCountAggregateInputType = {
	id?: true
	name?: true
	description?: true
	userId?: true
	isDefault?: true
	createdAt?: true
	updatedAt?: true
	usedAt?: true
	_all?: true
}
export type PresetAggregateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Filter which Preset to aggregate.
	 */
	where?: Prisma.PresetWhereInput
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of Presets to fetch.
	 */
	orderBy?:
		| Prisma.PresetOrderByWithRelationInput
		| Prisma.PresetOrderByWithRelationInput[]
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the start position
	 */
	cursor?: Prisma.PresetWhereUniqueInput
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` Presets from the position of the cursor.
	 */
	take?: number
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` Presets.
	 */
	skip?: number
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Count returned Presets
	 **/
	_count?: true | PresetCountAggregateInputType
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to find the minimum value
	 **/
	_min?: PresetMinAggregateInputType
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to find the maximum value
	 **/
	_max?: PresetMaxAggregateInputType
}
export type GetPresetAggregateType<T extends PresetAggregateArgs> = {
	[P in keyof T & keyof AggregatePreset]: P extends '_count' | 'count'
		? T[P] extends true
			? number
			: Prisma.GetScalarType<T[P], AggregatePreset[P]>
		: Prisma.GetScalarType<T[P], AggregatePreset[P]>
}
export type PresetGroupByArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	where?: Prisma.PresetWhereInput
	orderBy?:
		| Prisma.PresetOrderByWithAggregationInput
		| Prisma.PresetOrderByWithAggregationInput[]
	by: Prisma.PresetScalarFieldEnum[] | Prisma.PresetScalarFieldEnum
	having?: Prisma.PresetScalarWhereWithAggregatesInput
	take?: number
	skip?: number
	_count?: PresetCountAggregateInputType | true
	_min?: PresetMinAggregateInputType
	_max?: PresetMaxAggregateInputType
}
export type PresetGroupByOutputType = {
	id: string
	name: string
	description: string | null
	userId: string | null
	isDefault: boolean
	createdAt: Date
	updatedAt: Date
	usedAt: Date | null
	_count: PresetCountAggregateOutputType | null
	_min: PresetMinAggregateOutputType | null
	_max: PresetMaxAggregateOutputType | null
}
type GetPresetGroupByPayload<T extends PresetGroupByArgs> =
	Prisma.PrismaPromise<
		Array<
			Prisma.PickEnumerable<PresetGroupByOutputType, T['by']> & {
				[P in keyof T &
					keyof PresetGroupByOutputType]: P extends '_count'
					? T[P] extends boolean
						? number
						: Prisma.GetScalarType<T[P], PresetGroupByOutputType[P]>
					: Prisma.GetScalarType<T[P], PresetGroupByOutputType[P]>
			}
		>
	>
export type PresetWhereInput = {
	AND?: Prisma.PresetWhereInput | Prisma.PresetWhereInput[]
	OR?: Prisma.PresetWhereInput[]
	NOT?: Prisma.PresetWhereInput | Prisma.PresetWhereInput[]
	id?: Prisma.StringFilter<'Preset'> | string
	name?: Prisma.StringFilter<'Preset'> | string
	description?: Prisma.StringNullableFilter<'Preset'> | string | null
	userId?: Prisma.StringNullableFilter<'Preset'> | string | null
	isDefault?: Prisma.BoolFilter<'Preset'> | boolean
	createdAt?: Prisma.DateTimeFilter<'Preset'> | Date | string
	updatedAt?: Prisma.DateTimeFilter<'Preset'> | Date | string
	usedAt?: Prisma.DateTimeNullableFilter<'Preset'> | Date | string | null
	Models?: Prisma.PresetModelListRelationFilter
	User?: Prisma.XOR<
		Prisma.UserNullableScalarRelationFilter,
		Prisma.UserWhereInput
	> | null
	Analysis?: Prisma.AnalysisListRelationFilter
}
export type PresetOrderByWithRelationInput = {
	id?: Prisma.SortOrder
	name?: Prisma.SortOrder
	description?: Prisma.SortOrderInput | Prisma.SortOrder
	userId?: Prisma.SortOrderInput | Prisma.SortOrder
	isDefault?: Prisma.SortOrder
	createdAt?: Prisma.SortOrder
	updatedAt?: Prisma.SortOrder
	usedAt?: Prisma.SortOrderInput | Prisma.SortOrder
	Models?: Prisma.PresetModelOrderByRelationAggregateInput
	User?: Prisma.UserOrderByWithRelationInput
	Analysis?: Prisma.AnalysisOrderByRelationAggregateInput
	_relevance?: Prisma.PresetOrderByRelevanceInput
}
export type PresetWhereUniqueInput = Prisma.AtLeast<
	{
		id?: string
		AND?: Prisma.PresetWhereInput | Prisma.PresetWhereInput[]
		OR?: Prisma.PresetWhereInput[]
		NOT?: Prisma.PresetWhereInput | Prisma.PresetWhereInput[]
		name?: Prisma.StringFilter<'Preset'> | string
		description?: Prisma.StringNullableFilter<'Preset'> | string | null
		userId?: Prisma.StringNullableFilter<'Preset'> | string | null
		isDefault?: Prisma.BoolFilter<'Preset'> | boolean
		createdAt?: Prisma.DateTimeFilter<'Preset'> | Date | string
		updatedAt?: Prisma.DateTimeFilter<'Preset'> | Date | string
		usedAt?: Prisma.DateTimeNullableFilter<'Preset'> | Date | string | null
		Models?: Prisma.PresetModelListRelationFilter
		User?: Prisma.XOR<
			Prisma.UserNullableScalarRelationFilter,
			Prisma.UserWhereInput
		> | null
		Analysis?: Prisma.AnalysisListRelationFilter
	},
	'id'
>
export type PresetOrderByWithAggregationInput = {
	id?: Prisma.SortOrder
	name?: Prisma.SortOrder
	description?: Prisma.SortOrderInput | Prisma.SortOrder
	userId?: Prisma.SortOrderInput | Prisma.SortOrder
	isDefault?: Prisma.SortOrder
	createdAt?: Prisma.SortOrder
	updatedAt?: Prisma.SortOrder
	usedAt?: Prisma.SortOrderInput | Prisma.SortOrder
	_count?: Prisma.PresetCountOrderByAggregateInput
	_max?: Prisma.PresetMaxOrderByAggregateInput
	_min?: Prisma.PresetMinOrderByAggregateInput
}
export type PresetScalarWhereWithAggregatesInput = {
	AND?:
		| Prisma.PresetScalarWhereWithAggregatesInput
		| Prisma.PresetScalarWhereWithAggregatesInput[]
	OR?: Prisma.PresetScalarWhereWithAggregatesInput[]
	NOT?:
		| Prisma.PresetScalarWhereWithAggregatesInput
		| Prisma.PresetScalarWhereWithAggregatesInput[]
	id?: Prisma.StringWithAggregatesFilter<'Preset'> | string
	name?: Prisma.StringWithAggregatesFilter<'Preset'> | string
	description?:
		| Prisma.StringNullableWithAggregatesFilter<'Preset'>
		| string
		| null
	userId?: Prisma.StringNullableWithAggregatesFilter<'Preset'> | string | null
	isDefault?: Prisma.BoolWithAggregatesFilter<'Preset'> | boolean
	createdAt?: Prisma.DateTimeWithAggregatesFilter<'Preset'> | Date | string
	updatedAt?: Prisma.DateTimeWithAggregatesFilter<'Preset'> | Date | string
	usedAt?:
		| Prisma.DateTimeNullableWithAggregatesFilter<'Preset'>
		| Date
		| string
		| null
}
export type PresetCreateInput = {
	id?: string
	name: string
	description?: string | null
	isDefault?: boolean
	createdAt?: Date | string
	updatedAt?: Date | string
	usedAt?: Date | string | null
	Models?: Prisma.PresetModelCreateNestedManyWithoutPresetInput
	User?: Prisma.UserCreateNestedOneWithoutPresetsInput
	Analysis?: Prisma.AnalysisCreateNestedManyWithoutPresetInput
}
export type PresetUncheckedCreateInput = {
	id?: string
	name: string
	description?: string | null
	userId?: string | null
	isDefault?: boolean
	createdAt?: Date | string
	updatedAt?: Date | string
	usedAt?: Date | string | null
	Models?: Prisma.PresetModelUncheckedCreateNestedManyWithoutPresetInput
	Analysis?: Prisma.AnalysisUncheckedCreateNestedManyWithoutPresetInput
}
export type PresetUpdateInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string
	name?: Prisma.StringFieldUpdateOperationsInput | string
	description?:
		| Prisma.NullableStringFieldUpdateOperationsInput
		| string
		| null
	isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	usedAt?:
		| Prisma.NullableDateTimeFieldUpdateOperationsInput
		| Date
		| string
		| null
	Models?: Prisma.PresetModelUpdateManyWithoutPresetNestedInput
	User?: Prisma.UserUpdateOneWithoutPresetsNestedInput
	Analysis?: Prisma.AnalysisUpdateManyWithoutPresetNestedInput
}
export type PresetUncheckedUpdateInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string
	name?: Prisma.StringFieldUpdateOperationsInput | string
	description?:
		| Prisma.NullableStringFieldUpdateOperationsInput
		| string
		| null
	userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
	isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	usedAt?:
		| Prisma.NullableDateTimeFieldUpdateOperationsInput
		| Date
		| string
		| null
	Models?: Prisma.PresetModelUncheckedUpdateManyWithoutPresetNestedInput
	Analysis?: Prisma.AnalysisUncheckedUpdateManyWithoutPresetNestedInput
}
export type PresetCreateManyInput = {
	id?: string
	name: string
	description?: string | null
	userId?: string | null
	isDefault?: boolean
	createdAt?: Date | string
	updatedAt?: Date | string
	usedAt?: Date | string | null
}
export type PresetUpdateManyMutationInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string
	name?: Prisma.StringFieldUpdateOperationsInput | string
	description?:
		| Prisma.NullableStringFieldUpdateOperationsInput
		| string
		| null
	isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	usedAt?:
		| Prisma.NullableDateTimeFieldUpdateOperationsInput
		| Date
		| string
		| null
}
export type PresetUncheckedUpdateManyInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string
	name?: Prisma.StringFieldUpdateOperationsInput | string
	description?:
		| Prisma.NullableStringFieldUpdateOperationsInput
		| string
		| null
	userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
	isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	usedAt?:
		| Prisma.NullableDateTimeFieldUpdateOperationsInput
		| Date
		| string
		| null
}
export type PresetListRelationFilter = {
	every?: Prisma.PresetWhereInput
	some?: Prisma.PresetWhereInput
	none?: Prisma.PresetWhereInput
}
export type PresetOrderByRelationAggregateInput = { _count?: Prisma.SortOrder }
export type PresetScalarRelationFilter = {
	is?: Prisma.PresetWhereInput
	isNot?: Prisma.PresetWhereInput
}
export type PresetOrderByRelevanceInput = {
	fields:
		| Prisma.PresetOrderByRelevanceFieldEnum
		| Prisma.PresetOrderByRelevanceFieldEnum[]
	sort: Prisma.SortOrder
	search: string
}
export type PresetCountOrderByAggregateInput = {
	id?: Prisma.SortOrder
	name?: Prisma.SortOrder
	description?: Prisma.SortOrder
	userId?: Prisma.SortOrder
	isDefault?: Prisma.SortOrder
	createdAt?: Prisma.SortOrder
	updatedAt?: Prisma.SortOrder
	usedAt?: Prisma.SortOrder
}
export type PresetMaxOrderByAggregateInput = {
	id?: Prisma.SortOrder
	name?: Prisma.SortOrder
	description?: Prisma.SortOrder
	userId?: Prisma.SortOrder
	isDefault?: Prisma.SortOrder
	createdAt?: Prisma.SortOrder
	updatedAt?: Prisma.SortOrder
	usedAt?: Prisma.SortOrder
}
export type PresetMinOrderByAggregateInput = {
	id?: Prisma.SortOrder
	name?: Prisma.SortOrder
	description?: Prisma.SortOrder
	userId?: Prisma.SortOrder
	isDefault?: Prisma.SortOrder
	createdAt?: Prisma.SortOrder
	updatedAt?: Prisma.SortOrder
	usedAt?: Prisma.SortOrder
}
export type PresetCreateNestedManyWithoutUserInput = {
	create?:
		| Prisma.XOR<
				Prisma.PresetCreateWithoutUserInput,
				Prisma.PresetUncheckedCreateWithoutUserInput
		  >
		| Prisma.PresetCreateWithoutUserInput[]
		| Prisma.PresetUncheckedCreateWithoutUserInput[]
	connectOrCreate?:
		| Prisma.PresetCreateOrConnectWithoutUserInput
		| Prisma.PresetCreateOrConnectWithoutUserInput[]
	createMany?: Prisma.PresetCreateManyUserInputEnvelope
	connect?: Prisma.PresetWhereUniqueInput | Prisma.PresetWhereUniqueInput[]
}
export type PresetUncheckedCreateNestedManyWithoutUserInput = {
	create?:
		| Prisma.XOR<
				Prisma.PresetCreateWithoutUserInput,
				Prisma.PresetUncheckedCreateWithoutUserInput
		  >
		| Prisma.PresetCreateWithoutUserInput[]
		| Prisma.PresetUncheckedCreateWithoutUserInput[]
	connectOrCreate?:
		| Prisma.PresetCreateOrConnectWithoutUserInput
		| Prisma.PresetCreateOrConnectWithoutUserInput[]
	createMany?: Prisma.PresetCreateManyUserInputEnvelope
	connect?: Prisma.PresetWhereUniqueInput | Prisma.PresetWhereUniqueInput[]
}
export type PresetUpdateManyWithoutUserNestedInput = {
	create?:
		| Prisma.XOR<
				Prisma.PresetCreateWithoutUserInput,
				Prisma.PresetUncheckedCreateWithoutUserInput
		  >
		| Prisma.PresetCreateWithoutUserInput[]
		| Prisma.PresetUncheckedCreateWithoutUserInput[]
	connectOrCreate?:
		| Prisma.PresetCreateOrConnectWithoutUserInput
		| Prisma.PresetCreateOrConnectWithoutUserInput[]
	upsert?:
		| Prisma.PresetUpsertWithWhereUniqueWithoutUserInput
		| Prisma.PresetUpsertWithWhereUniqueWithoutUserInput[]
	createMany?: Prisma.PresetCreateManyUserInputEnvelope
	set?: Prisma.PresetWhereUniqueInput | Prisma.PresetWhereUniqueInput[]
	disconnect?: Prisma.PresetWhereUniqueInput | Prisma.PresetWhereUniqueInput[]
	delete?: Prisma.PresetWhereUniqueInput | Prisma.PresetWhereUniqueInput[]
	connect?: Prisma.PresetWhereUniqueInput | Prisma.PresetWhereUniqueInput[]
	update?:
		| Prisma.PresetUpdateWithWhereUniqueWithoutUserInput
		| Prisma.PresetUpdateWithWhereUniqueWithoutUserInput[]
	updateMany?:
		| Prisma.PresetUpdateManyWithWhereWithoutUserInput
		| Prisma.PresetUpdateManyWithWhereWithoutUserInput[]
	deleteMany?: Prisma.PresetScalarWhereInput | Prisma.PresetScalarWhereInput[]
}
export type PresetUncheckedUpdateManyWithoutUserNestedInput = {
	create?:
		| Prisma.XOR<
				Prisma.PresetCreateWithoutUserInput,
				Prisma.PresetUncheckedCreateWithoutUserInput
		  >
		| Prisma.PresetCreateWithoutUserInput[]
		| Prisma.PresetUncheckedCreateWithoutUserInput[]
	connectOrCreate?:
		| Prisma.PresetCreateOrConnectWithoutUserInput
		| Prisma.PresetCreateOrConnectWithoutUserInput[]
	upsert?:
		| Prisma.PresetUpsertWithWhereUniqueWithoutUserInput
		| Prisma.PresetUpsertWithWhereUniqueWithoutUserInput[]
	createMany?: Prisma.PresetCreateManyUserInputEnvelope
	set?: Prisma.PresetWhereUniqueInput | Prisma.PresetWhereUniqueInput[]
	disconnect?: Prisma.PresetWhereUniqueInput | Prisma.PresetWhereUniqueInput[]
	delete?: Prisma.PresetWhereUniqueInput | Prisma.PresetWhereUniqueInput[]
	connect?: Prisma.PresetWhereUniqueInput | Prisma.PresetWhereUniqueInput[]
	update?:
		| Prisma.PresetUpdateWithWhereUniqueWithoutUserInput
		| Prisma.PresetUpdateWithWhereUniqueWithoutUserInput[]
	updateMany?:
		| Prisma.PresetUpdateManyWithWhereWithoutUserInput
		| Prisma.PresetUpdateManyWithWhereWithoutUserInput[]
	deleteMany?: Prisma.PresetScalarWhereInput | Prisma.PresetScalarWhereInput[]
}
export type PresetCreateNestedOneWithoutAnalysisInput = {
	create?: Prisma.XOR<
		Prisma.PresetCreateWithoutAnalysisInput,
		Prisma.PresetUncheckedCreateWithoutAnalysisInput
	>
	connectOrCreate?: Prisma.PresetCreateOrConnectWithoutAnalysisInput
	connect?: Prisma.PresetWhereUniqueInput
}
export type PresetUpdateOneRequiredWithoutAnalysisNestedInput = {
	create?: Prisma.XOR<
		Prisma.PresetCreateWithoutAnalysisInput,
		Prisma.PresetUncheckedCreateWithoutAnalysisInput
	>
	connectOrCreate?: Prisma.PresetCreateOrConnectWithoutAnalysisInput
	upsert?: Prisma.PresetUpsertWithoutAnalysisInput
	connect?: Prisma.PresetWhereUniqueInput
	update?: Prisma.XOR<
		Prisma.XOR<
			Prisma.PresetUpdateToOneWithWhereWithoutAnalysisInput,
			Prisma.PresetUpdateWithoutAnalysisInput
		>,
		Prisma.PresetUncheckedUpdateWithoutAnalysisInput
	>
}
export type PresetCreateNestedOneWithoutModelsInput = {
	create?: Prisma.XOR<
		Prisma.PresetCreateWithoutModelsInput,
		Prisma.PresetUncheckedCreateWithoutModelsInput
	>
	connectOrCreate?: Prisma.PresetCreateOrConnectWithoutModelsInput
	connect?: Prisma.PresetWhereUniqueInput
}
export type PresetUpdateOneRequiredWithoutModelsNestedInput = {
	create?: Prisma.XOR<
		Prisma.PresetCreateWithoutModelsInput,
		Prisma.PresetUncheckedCreateWithoutModelsInput
	>
	connectOrCreate?: Prisma.PresetCreateOrConnectWithoutModelsInput
	upsert?: Prisma.PresetUpsertWithoutModelsInput
	connect?: Prisma.PresetWhereUniqueInput
	update?: Prisma.XOR<
		Prisma.XOR<
			Prisma.PresetUpdateToOneWithWhereWithoutModelsInput,
			Prisma.PresetUpdateWithoutModelsInput
		>,
		Prisma.PresetUncheckedUpdateWithoutModelsInput
	>
}
export type PresetCreateWithoutUserInput = {
	id?: string
	name: string
	description?: string | null
	isDefault?: boolean
	createdAt?: Date | string
	updatedAt?: Date | string
	usedAt?: Date | string | null
	Models?: Prisma.PresetModelCreateNestedManyWithoutPresetInput
	Analysis?: Prisma.AnalysisCreateNestedManyWithoutPresetInput
}
export type PresetUncheckedCreateWithoutUserInput = {
	id?: string
	name: string
	description?: string | null
	isDefault?: boolean
	createdAt?: Date | string
	updatedAt?: Date | string
	usedAt?: Date | string | null
	Models?: Prisma.PresetModelUncheckedCreateNestedManyWithoutPresetInput
	Analysis?: Prisma.AnalysisUncheckedCreateNestedManyWithoutPresetInput
}
export type PresetCreateOrConnectWithoutUserInput = {
	where: Prisma.PresetWhereUniqueInput
	create: Prisma.XOR<
		Prisma.PresetCreateWithoutUserInput,
		Prisma.PresetUncheckedCreateWithoutUserInput
	>
}
export type PresetCreateManyUserInputEnvelope = {
	data: Prisma.PresetCreateManyUserInput | Prisma.PresetCreateManyUserInput[]
	skipDuplicates?: boolean
}
export type PresetUpsertWithWhereUniqueWithoutUserInput = {
	where: Prisma.PresetWhereUniqueInput
	update: Prisma.XOR<
		Prisma.PresetUpdateWithoutUserInput,
		Prisma.PresetUncheckedUpdateWithoutUserInput
	>
	create: Prisma.XOR<
		Prisma.PresetCreateWithoutUserInput,
		Prisma.PresetUncheckedCreateWithoutUserInput
	>
}
export type PresetUpdateWithWhereUniqueWithoutUserInput = {
	where: Prisma.PresetWhereUniqueInput
	data: Prisma.XOR<
		Prisma.PresetUpdateWithoutUserInput,
		Prisma.PresetUncheckedUpdateWithoutUserInput
	>
}
export type PresetUpdateManyWithWhereWithoutUserInput = {
	where: Prisma.PresetScalarWhereInput
	data: Prisma.XOR<
		Prisma.PresetUpdateManyMutationInput,
		Prisma.PresetUncheckedUpdateManyWithoutUserInput
	>
}
export type PresetScalarWhereInput = {
	AND?: Prisma.PresetScalarWhereInput | Prisma.PresetScalarWhereInput[]
	OR?: Prisma.PresetScalarWhereInput[]
	NOT?: Prisma.PresetScalarWhereInput | Prisma.PresetScalarWhereInput[]
	id?: Prisma.StringFilter<'Preset'> | string
	name?: Prisma.StringFilter<'Preset'> | string
	description?: Prisma.StringNullableFilter<'Preset'> | string | null
	userId?: Prisma.StringNullableFilter<'Preset'> | string | null
	isDefault?: Prisma.BoolFilter<'Preset'> | boolean
	createdAt?: Prisma.DateTimeFilter<'Preset'> | Date | string
	updatedAt?: Prisma.DateTimeFilter<'Preset'> | Date | string
	usedAt?: Prisma.DateTimeNullableFilter<'Preset'> | Date | string | null
}
export type PresetCreateWithoutAnalysisInput = {
	id?: string
	name: string
	description?: string | null
	isDefault?: boolean
	createdAt?: Date | string
	updatedAt?: Date | string
	usedAt?: Date | string | null
	Models?: Prisma.PresetModelCreateNestedManyWithoutPresetInput
	User?: Prisma.UserCreateNestedOneWithoutPresetsInput
}
export type PresetUncheckedCreateWithoutAnalysisInput = {
	id?: string
	name: string
	description?: string | null
	userId?: string | null
	isDefault?: boolean
	createdAt?: Date | string
	updatedAt?: Date | string
	usedAt?: Date | string | null
	Models?: Prisma.PresetModelUncheckedCreateNestedManyWithoutPresetInput
}
export type PresetCreateOrConnectWithoutAnalysisInput = {
	where: Prisma.PresetWhereUniqueInput
	create: Prisma.XOR<
		Prisma.PresetCreateWithoutAnalysisInput,
		Prisma.PresetUncheckedCreateWithoutAnalysisInput
	>
}
export type PresetUpsertWithoutAnalysisInput = {
	update: Prisma.XOR<
		Prisma.PresetUpdateWithoutAnalysisInput,
		Prisma.PresetUncheckedUpdateWithoutAnalysisInput
	>
	create: Prisma.XOR<
		Prisma.PresetCreateWithoutAnalysisInput,
		Prisma.PresetUncheckedCreateWithoutAnalysisInput
	>
	where?: Prisma.PresetWhereInput
}
export type PresetUpdateToOneWithWhereWithoutAnalysisInput = {
	where?: Prisma.PresetWhereInput
	data: Prisma.XOR<
		Prisma.PresetUpdateWithoutAnalysisInput,
		Prisma.PresetUncheckedUpdateWithoutAnalysisInput
	>
}
export type PresetUpdateWithoutAnalysisInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string
	name?: Prisma.StringFieldUpdateOperationsInput | string
	description?:
		| Prisma.NullableStringFieldUpdateOperationsInput
		| string
		| null
	isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	usedAt?:
		| Prisma.NullableDateTimeFieldUpdateOperationsInput
		| Date
		| string
		| null
	Models?: Prisma.PresetModelUpdateManyWithoutPresetNestedInput
	User?: Prisma.UserUpdateOneWithoutPresetsNestedInput
}
export type PresetUncheckedUpdateWithoutAnalysisInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string
	name?: Prisma.StringFieldUpdateOperationsInput | string
	description?:
		| Prisma.NullableStringFieldUpdateOperationsInput
		| string
		| null
	userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
	isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	usedAt?:
		| Prisma.NullableDateTimeFieldUpdateOperationsInput
		| Date
		| string
		| null
	Models?: Prisma.PresetModelUncheckedUpdateManyWithoutPresetNestedInput
}
export type PresetCreateWithoutModelsInput = {
	id?: string
	name: string
	description?: string | null
	isDefault?: boolean
	createdAt?: Date | string
	updatedAt?: Date | string
	usedAt?: Date | string | null
	User?: Prisma.UserCreateNestedOneWithoutPresetsInput
	Analysis?: Prisma.AnalysisCreateNestedManyWithoutPresetInput
}
export type PresetUncheckedCreateWithoutModelsInput = {
	id?: string
	name: string
	description?: string | null
	userId?: string | null
	isDefault?: boolean
	createdAt?: Date | string
	updatedAt?: Date | string
	usedAt?: Date | string | null
	Analysis?: Prisma.AnalysisUncheckedCreateNestedManyWithoutPresetInput
}
export type PresetCreateOrConnectWithoutModelsInput = {
	where: Prisma.PresetWhereUniqueInput
	create: Prisma.XOR<
		Prisma.PresetCreateWithoutModelsInput,
		Prisma.PresetUncheckedCreateWithoutModelsInput
	>
}
export type PresetUpsertWithoutModelsInput = {
	update: Prisma.XOR<
		Prisma.PresetUpdateWithoutModelsInput,
		Prisma.PresetUncheckedUpdateWithoutModelsInput
	>
	create: Prisma.XOR<
		Prisma.PresetCreateWithoutModelsInput,
		Prisma.PresetUncheckedCreateWithoutModelsInput
	>
	where?: Prisma.PresetWhereInput
}
export type PresetUpdateToOneWithWhereWithoutModelsInput = {
	where?: Prisma.PresetWhereInput
	data: Prisma.XOR<
		Prisma.PresetUpdateWithoutModelsInput,
		Prisma.PresetUncheckedUpdateWithoutModelsInput
	>
}
export type PresetUpdateWithoutModelsInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string
	name?: Prisma.StringFieldUpdateOperationsInput | string
	description?:
		| Prisma.NullableStringFieldUpdateOperationsInput
		| string
		| null
	isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	usedAt?:
		| Prisma.NullableDateTimeFieldUpdateOperationsInput
		| Date
		| string
		| null
	User?: Prisma.UserUpdateOneWithoutPresetsNestedInput
	Analysis?: Prisma.AnalysisUpdateManyWithoutPresetNestedInput
}
export type PresetUncheckedUpdateWithoutModelsInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string
	name?: Prisma.StringFieldUpdateOperationsInput | string
	description?:
		| Prisma.NullableStringFieldUpdateOperationsInput
		| string
		| null
	userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
	isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	usedAt?:
		| Prisma.NullableDateTimeFieldUpdateOperationsInput
		| Date
		| string
		| null
	Analysis?: Prisma.AnalysisUncheckedUpdateManyWithoutPresetNestedInput
}
export type PresetCreateManyUserInput = {
	id?: string
	name: string
	description?: string | null
	isDefault?: boolean
	createdAt?: Date | string
	updatedAt?: Date | string
	usedAt?: Date | string | null
}
export type PresetUpdateWithoutUserInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string
	name?: Prisma.StringFieldUpdateOperationsInput | string
	description?:
		| Prisma.NullableStringFieldUpdateOperationsInput
		| string
		| null
	isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	usedAt?:
		| Prisma.NullableDateTimeFieldUpdateOperationsInput
		| Date
		| string
		| null
	Models?: Prisma.PresetModelUpdateManyWithoutPresetNestedInput
	Analysis?: Prisma.AnalysisUpdateManyWithoutPresetNestedInput
}
export type PresetUncheckedUpdateWithoutUserInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string
	name?: Prisma.StringFieldUpdateOperationsInput | string
	description?:
		| Prisma.NullableStringFieldUpdateOperationsInput
		| string
		| null
	isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	usedAt?:
		| Prisma.NullableDateTimeFieldUpdateOperationsInput
		| Date
		| string
		| null
	Models?: Prisma.PresetModelUncheckedUpdateManyWithoutPresetNestedInput
	Analysis?: Prisma.AnalysisUncheckedUpdateManyWithoutPresetNestedInput
}
export type PresetUncheckedUpdateManyWithoutUserInput = {
	id?: Prisma.StringFieldUpdateOperationsInput | string
	name?: Prisma.StringFieldUpdateOperationsInput | string
	description?:
		| Prisma.NullableStringFieldUpdateOperationsInput
		| string
		| null
	isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
	usedAt?:
		| Prisma.NullableDateTimeFieldUpdateOperationsInput
		| Date
		| string
		| null
}
/**
 * Count Type PresetCountOutputType
 */
export type PresetCountOutputType = { Models: number; Analysis: number }
export type PresetCountOutputTypeSelect<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	Models?: boolean | PresetCountOutputTypeCountModelsArgs
	Analysis?: boolean | PresetCountOutputTypeCountAnalysisArgs
}
/**
 * PresetCountOutputType without action
 */
export type PresetCountOutputTypeDefaultArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the PresetCountOutputType
	 */
	select?: Prisma.PresetCountOutputTypeSelect<ExtArgs> | null
}
/**
 * PresetCountOutputType without action
 */
export type PresetCountOutputTypeCountModelsArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = { where?: Prisma.PresetModelWhereInput }
/**
 * PresetCountOutputType without action
 */
export type PresetCountOutputTypeCountAnalysisArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = { where?: Prisma.AnalysisWhereInput }
export type PresetSelect<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
	{
		id?: boolean
		name?: boolean
		description?: boolean
		userId?: boolean
		isDefault?: boolean
		createdAt?: boolean
		updatedAt?: boolean
		usedAt?: boolean
		Models?: boolean | Prisma.Preset$ModelsArgs<ExtArgs>
		User?: boolean | Prisma.Preset$UserArgs<ExtArgs>
		Analysis?: boolean | Prisma.Preset$AnalysisArgs<ExtArgs>
		_count?: boolean | Prisma.PresetCountOutputTypeDefaultArgs<ExtArgs>
	},
	ExtArgs['result']['preset']
>
export type PresetSelectCreateManyAndReturn<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
	{
		id?: boolean
		name?: boolean
		description?: boolean
		userId?: boolean
		isDefault?: boolean
		createdAt?: boolean
		updatedAt?: boolean
		usedAt?: boolean
		User?: boolean | Prisma.Preset$UserArgs<ExtArgs>
	},
	ExtArgs['result']['preset']
>
export type PresetSelectUpdateManyAndReturn<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
	{
		id?: boolean
		name?: boolean
		description?: boolean
		userId?: boolean
		isDefault?: boolean
		createdAt?: boolean
		updatedAt?: boolean
		usedAt?: boolean
		User?: boolean | Prisma.Preset$UserArgs<ExtArgs>
	},
	ExtArgs['result']['preset']
>
export type PresetSelectScalar = {
	id?: boolean
	name?: boolean
	description?: boolean
	userId?: boolean
	isDefault?: boolean
	createdAt?: boolean
	updatedAt?: boolean
	usedAt?: boolean
}
export type PresetOmit<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
	| 'id'
	| 'name'
	| 'description'
	| 'userId'
	| 'isDefault'
	| 'createdAt'
	| 'updatedAt'
	| 'usedAt',
	ExtArgs['result']['preset']
>
export type PresetInclude<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	Models?: boolean | Prisma.Preset$ModelsArgs<ExtArgs>
	User?: boolean | Prisma.Preset$UserArgs<ExtArgs>
	Analysis?: boolean | Prisma.Preset$AnalysisArgs<ExtArgs>
	_count?: boolean | Prisma.PresetCountOutputTypeDefaultArgs<ExtArgs>
}
export type PresetIncludeCreateManyAndReturn<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = { User?: boolean | Prisma.Preset$UserArgs<ExtArgs> }
export type PresetIncludeUpdateManyAndReturn<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = { User?: boolean | Prisma.Preset$UserArgs<ExtArgs> }
export type $PresetPayload<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	name: 'Preset'
	objects: {
		Models: Prisma.$PresetModelPayload<ExtArgs>[]
		User: Prisma.$UserPayload<ExtArgs> | null
		Analysis: Prisma.$AnalysisPayload<ExtArgs>[]
	}
	scalars: runtime.Types.Extensions.GetPayloadResult<
		{
			id: string
			name: string
			description: string | null
			userId: string | null
			isDefault: boolean
			createdAt: Date
			updatedAt: Date
			usedAt: Date | null
		},
		ExtArgs['result']['preset']
	>
	composites: {}
}
export type PresetGetPayload<
	S extends boolean | null | undefined | PresetDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$PresetPayload, S>
export type PresetCountArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<PresetFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
	select?: PresetCountAggregateInputType | true
}

export interface PresetDelegate<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
	GlobalOmitOptions = {},
> {
	[K: symbol]: {
		types: Prisma.TypeMap<ExtArgs>['model']['Preset']
		meta: { name: 'Preset' }
	}
	/**
	 * Fields of the Preset model
	 */
	readonly fields: PresetFieldRefs
	/**
	 * Find zero or one Preset that matches the filter.
	 * @param {PresetFindUniqueArgs} args - Arguments to find a Preset
	 * @example
	 * // Get one Preset
	 * const preset = await prisma.preset.findUnique({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findUnique<T extends PresetFindUniqueArgs>(
		args: Prisma.SelectSubset<T, PresetFindUniqueArgs<ExtArgs>>,
	): Prisma.Prisma__PresetClient<
		runtime.Types.Result.GetResult<
			Prisma.$PresetPayload<ExtArgs>,
			T,
			'findUnique',
			GlobalOmitOptions
		> | null,
		null,
		ExtArgs,
		GlobalOmitOptions
	>
	/**
	 * Find one Preset that matches the filter or throw an error with `error.code='P2025'`
	 * if no matches were found.
	 * @param {PresetFindUniqueOrThrowArgs} args - Arguments to find a Preset
	 * @example
	 * // Get one Preset
	 * const preset = await prisma.preset.findUniqueOrThrow({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findUniqueOrThrow<T extends PresetFindUniqueOrThrowArgs>(
		args: Prisma.SelectSubset<T, PresetFindUniqueOrThrowArgs<ExtArgs>>,
	): Prisma.Prisma__PresetClient<
		runtime.Types.Result.GetResult<
			Prisma.$PresetPayload<ExtArgs>,
			T,
			'findUniqueOrThrow',
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>
	/**
	 * Find the first Preset that matches the filter.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {PresetFindFirstArgs} args - Arguments to find a Preset
	 * @example
	 * // Get one Preset
	 * const preset = await prisma.preset.findFirst({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findFirst<T extends PresetFindFirstArgs>(
		args?: Prisma.SelectSubset<T, PresetFindFirstArgs<ExtArgs>>,
	): Prisma.Prisma__PresetClient<
		runtime.Types.Result.GetResult<
			Prisma.$PresetPayload<ExtArgs>,
			T,
			'findFirst',
			GlobalOmitOptions
		> | null,
		null,
		ExtArgs,
		GlobalOmitOptions
	>
	/**
	 * Find the first Preset that matches the filter or
	 * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {PresetFindFirstOrThrowArgs} args - Arguments to find a Preset
	 * @example
	 * // Get one Preset
	 * const preset = await prisma.preset.findFirstOrThrow({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findFirstOrThrow<T extends PresetFindFirstOrThrowArgs>(
		args?: Prisma.SelectSubset<T, PresetFindFirstOrThrowArgs<ExtArgs>>,
	): Prisma.Prisma__PresetClient<
		runtime.Types.Result.GetResult<
			Prisma.$PresetPayload<ExtArgs>,
			T,
			'findFirstOrThrow',
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>
	/**
	 * Find zero or more Presets that matches the filter.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {PresetFindManyArgs} args - Arguments to filter and select certain fields only.
	 * @example
	 * // Get all Presets
	 * const presets = await prisma.preset.findMany()
	 *
	 * // Get first 10 Presets
	 * const presets = await prisma.preset.findMany({ take: 10 })
	 *
	 * // Only select the `id`
	 * const presetWithIdOnly = await prisma.preset.findMany({ select: { id: true } })
	 */
	findMany<T extends PresetFindManyArgs>(
		args?: Prisma.SelectSubset<T, PresetFindManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		runtime.Types.Result.GetResult<
			Prisma.$PresetPayload<ExtArgs>,
			T,
			'findMany',
			GlobalOmitOptions
		>
	>
	/**
	 * Create a Preset.
	 * @param {PresetCreateArgs} args - Arguments to create a Preset.
	 * @example
	 * // Create one Preset
	 * const Preset = await prisma.preset.create({
	 *   data: {
	 *     // ... data to create a Preset
	 *   }
	 * })
	 */
	create<T extends PresetCreateArgs>(
		args: Prisma.SelectSubset<T, PresetCreateArgs<ExtArgs>>,
	): Prisma.Prisma__PresetClient<
		runtime.Types.Result.GetResult<
			Prisma.$PresetPayload<ExtArgs>,
			T,
			'create',
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>
	/**
	 * Create many Presets.
	 * @param {PresetCreateManyArgs} args - Arguments to create many Presets.
	 * @example
	 * // Create many Presets
	 * const preset = await prisma.preset.createMany({
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 */
	createMany<T extends PresetCreateManyArgs>(
		args?: Prisma.SelectSubset<T, PresetCreateManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>
	/**
	 * Create many Presets and returns the data saved in the database.
	 * @param {PresetCreateManyAndReturnArgs} args - Arguments to create many Presets.
	 * @example
	 * // Create many Presets
	 * const preset = await prisma.preset.createManyAndReturn({
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 *
	 * // Create many Presets and only return the `id`
	 * const presetWithIdOnly = await prisma.preset.createManyAndReturn({
	 *   select: { id: true },
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 */
	createManyAndReturn<T extends PresetCreateManyAndReturnArgs>(
		args?: Prisma.SelectSubset<T, PresetCreateManyAndReturnArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		runtime.Types.Result.GetResult<
			Prisma.$PresetPayload<ExtArgs>,
			T,
			'createManyAndReturn',
			GlobalOmitOptions
		>
	>
	/**
	 * Delete a Preset.
	 * @param {PresetDeleteArgs} args - Arguments to delete one Preset.
	 * @example
	 * // Delete one Preset
	 * const Preset = await prisma.preset.delete({
	 *   where: {
	 *     // ... filter to delete one Preset
	 *   }
	 * })
	 */
	delete<T extends PresetDeleteArgs>(
		args: Prisma.SelectSubset<T, PresetDeleteArgs<ExtArgs>>,
	): Prisma.Prisma__PresetClient<
		runtime.Types.Result.GetResult<
			Prisma.$PresetPayload<ExtArgs>,
			T,
			'delete',
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>
	/**
	 * Update one Preset.
	 * @param {PresetUpdateArgs} args - Arguments to update one Preset.
	 * @example
	 * // Update one Preset
	 * const preset = await prisma.preset.update({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: {
	 *     // ... provide data here
	 *   }
	 * })
	 */
	update<T extends PresetUpdateArgs>(
		args: Prisma.SelectSubset<T, PresetUpdateArgs<ExtArgs>>,
	): Prisma.Prisma__PresetClient<
		runtime.Types.Result.GetResult<
			Prisma.$PresetPayload<ExtArgs>,
			T,
			'update',
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>
	/**
	 * Delete zero or more Presets.
	 * @param {PresetDeleteManyArgs} args - Arguments to filter Presets to delete.
	 * @example
	 * // Delete a few Presets
	 * const { count } = await prisma.preset.deleteMany({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	deleteMany<T extends PresetDeleteManyArgs>(
		args?: Prisma.SelectSubset<T, PresetDeleteManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>
	/**
	 * Update zero or more Presets.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {PresetUpdateManyArgs} args - Arguments to update one or more rows.
	 * @example
	 * // Update many Presets
	 * const preset = await prisma.preset.updateMany({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: {
	 *     // ... provide data here
	 *   }
	 * })
	 */
	updateMany<T extends PresetUpdateManyArgs>(
		args: Prisma.SelectSubset<T, PresetUpdateManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>
	/**
	 * Update zero or more Presets and returns the data updated in the database.
	 * @param {PresetUpdateManyAndReturnArgs} args - Arguments to update many Presets.
	 * @example
	 * // Update many Presets
	 * const preset = await prisma.preset.updateManyAndReturn({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 *
	 * // Update zero or more Presets and only return the `id`
	 * const presetWithIdOnly = await prisma.preset.updateManyAndReturn({
	 *   select: { id: true },
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 */
	updateManyAndReturn<T extends PresetUpdateManyAndReturnArgs>(
		args: Prisma.SelectSubset<T, PresetUpdateManyAndReturnArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		runtime.Types.Result.GetResult<
			Prisma.$PresetPayload<ExtArgs>,
			T,
			'updateManyAndReturn',
			GlobalOmitOptions
		>
	>
	/**
	 * Create or update one Preset.
	 * @param {PresetUpsertArgs} args - Arguments to update or create a Preset.
	 * @example
	 * // Update or create a Preset
	 * const preset = await prisma.preset.upsert({
	 *   create: {
	 *     // ... data to create a Preset
	 *   },
	 *   update: {
	 *     // ... in case it already exists, update
	 *   },
	 *   where: {
	 *     // ... the filter for the Preset we want to update
	 *   }
	 * })
	 */
	upsert<T extends PresetUpsertArgs>(
		args: Prisma.SelectSubset<T, PresetUpsertArgs<ExtArgs>>,
	): Prisma.Prisma__PresetClient<
		runtime.Types.Result.GetResult<
			Prisma.$PresetPayload<ExtArgs>,
			T,
			'upsert',
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>
	/**
	 * Count the number of Presets.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {PresetCountArgs} args - Arguments to filter Presets to count.
	 * @example
	 * // Count the number of Presets
	 * const count = await prisma.preset.count({
	 *   where: {
	 *     // ... the filter for the Presets we want to count
	 *   }
	 * })
	 */
	count<T extends PresetCountArgs>(
		args?: Prisma.Subset<T, PresetCountArgs>,
	): Prisma.PrismaPromise<
		T extends runtime.Types.Utils.Record<'select', any>
			? T['select'] extends true
				? number
				: Prisma.GetScalarType<
						T['select'],
						PresetCountAggregateOutputType
					>
			: number
	>
	/**
	 * Allows you to perform aggregations operations on a Preset.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {PresetAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
	 * @example
	 * // Ordered by age ascending
	 * // Where email contains prisma.io
	 * // Limited to the 10 users
	 * const aggregations = await prisma.user.aggregate({
	 *   _avg: {
	 *     age: true,
	 *   },
	 *   where: {
	 *     email: {
	 *       contains: "prisma.io",
	 *     },
	 *   },
	 *   orderBy: {
	 *     age: "asc",
	 *   },
	 *   take: 10,
	 * })
	 */
	aggregate<T extends PresetAggregateArgs>(
		args: Prisma.Subset<T, PresetAggregateArgs>,
	): Prisma.PrismaPromise<GetPresetAggregateType<T>>
	/**
	 * Group by Preset.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {PresetGroupByArgs} args - Group by arguments.
	 * @example
	 * // Group by city, order by createdAt, get count
	 * const result = await prisma.user.groupBy({
	 *   by: ['city', 'createdAt'],
	 *   orderBy: {
	 *     createdAt: true
	 *   },
	 *   _count: {
	 *     _all: true
	 *   },
	 * })
	 */
	groupBy<
		T extends PresetGroupByArgs,
		HasSelectOrTake extends Prisma.Or<
			Prisma.Extends<'skip', Prisma.Keys<T>>,
			Prisma.Extends<'take', Prisma.Keys<T>>
		>,
		OrderByArg extends Prisma.True extends HasSelectOrTake
			? { orderBy: PresetGroupByArgs['orderBy'] }
			: { orderBy?: PresetGroupByArgs['orderBy'] },
		OrderFields extends Prisma.ExcludeUnderscoreKeys<
			Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
		>,
		ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
		ByValid extends Prisma.Has<ByFields, OrderFields>,
		HavingFields extends Prisma.GetHavingFields<T['having']>,
		HavingValid extends Prisma.Has<ByFields, HavingFields>,
		ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
		InputErrors extends ByEmpty extends Prisma.True
			? `Error: "by" must not be empty.`
			: HavingValid extends Prisma.False
				? {
						[P in HavingFields]: P extends ByFields
							? never
							: P extends string
								? `Error: Field "${P}" used in "having" needs to be provided in "by".`
								: [
										Error,
										'Field ',
										P,
										` in "having" needs to be provided in "by"`,
									]
					}[HavingFields]
				: 'take' extends Prisma.Keys<T>
					? 'orderBy' extends Prisma.Keys<T>
						? ByValid extends Prisma.True
							? {}
							: {
									[P in OrderFields]: P extends ByFields
										? never
										: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
								}[OrderFields]
						: 'Error: If you provide "take", you also need to provide "orderBy"'
					: 'skip' extends Prisma.Keys<T>
						? 'orderBy' extends Prisma.Keys<T>
							? ByValid extends Prisma.True
								? {}
								: {
										[P in OrderFields]: P extends ByFields
											? never
											: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
									}[OrderFields]
							: 'Error: If you provide "skip", you also need to provide "orderBy"'
						: ByValid extends Prisma.True
							? {}
							: {
									[P in OrderFields]: P extends ByFields
										? never
										: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
								}[OrderFields],
	>(
		args: Prisma.SubsetIntersection<T, PresetGroupByArgs, OrderByArg> &
			InputErrors,
	): {} extends InputErrors
		? GetPresetGroupByPayload<T>
		: Prisma.PrismaPromise<InputErrors>
}

/**
 * The delegate class that acts as a "Promise-like" for Preset.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__PresetClient<
	T,
	Null = never,
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
	GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
	readonly [Symbol.toStringTag]: 'PrismaPromise'
	Models<T extends Prisma.Preset$ModelsArgs<ExtArgs> = {}>(
		args?: Prisma.Subset<T, Prisma.Preset$ModelsArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		| runtime.Types.Result.GetResult<
				Prisma.$PresetModelPayload<ExtArgs>,
				T,
				'findMany',
				GlobalOmitOptions
		  >
		| Null
	>
	User<T extends Prisma.Preset$UserArgs<ExtArgs> = {}>(
		args?: Prisma.Subset<T, Prisma.Preset$UserArgs<ExtArgs>>,
	): Prisma.Prisma__UserClient<
		runtime.Types.Result.GetResult<
			Prisma.$UserPayload<ExtArgs>,
			T,
			'findUniqueOrThrow',
			GlobalOmitOptions
		> | null,
		null,
		ExtArgs,
		GlobalOmitOptions
	>
	Analysis<T extends Prisma.Preset$AnalysisArgs<ExtArgs> = {}>(
		args?: Prisma.Subset<T, Prisma.Preset$AnalysisArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		| runtime.Types.Result.GetResult<
				Prisma.$AnalysisPayload<ExtArgs>,
				T,
				'findMany',
				GlobalOmitOptions
		  >
		| Null
	>
	/**
	 * Attaches callbacks for the resolution and/or rejection of the Promise.
	 * @param onfulfilled The callback to execute when the Promise is resolved.
	 * @param onrejected The callback to execute when the Promise is rejected.
	 * @returns A Promise for the completion of which ever callback is executed.
	 */
	then<TResult1 = T, TResult2 = never>(
		onfulfilled?:
			| ((value: T) => TResult1 | PromiseLike<TResult1>)
			| undefined
			| null,
		onrejected?:
			| ((reason: any) => TResult2 | PromiseLike<TResult2>)
			| undefined
			| null,
	): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
	/**
	 * Attaches a callback for only the rejection of the Promise.
	 * @param onrejected The callback to execute when the Promise is rejected.
	 * @returns A Promise for the completion of the callback.
	 */
	catch<TResult = never>(
		onrejected?:
			| ((reason: any) => TResult | PromiseLike<TResult>)
			| undefined
			| null,
	): runtime.Types.Utils.JsPromise<T | TResult>
	/**
	 * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
	 * resolved value cannot be modified from the callback.
	 * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
	 * @returns A Promise for the completion of the callback.
	 */
	finally(
		onfinally?: (() => void) | undefined | null,
	): runtime.Types.Utils.JsPromise<T>
}

/**
 * Fields of the Preset model
 */
export interface PresetFieldRefs {
	readonly id: Prisma.FieldRef<'Preset', 'String'>
	readonly name: Prisma.FieldRef<'Preset', 'String'>
	readonly description: Prisma.FieldRef<'Preset', 'String'>
	readonly userId: Prisma.FieldRef<'Preset', 'String'>
	readonly isDefault: Prisma.FieldRef<'Preset', 'Boolean'>
	readonly createdAt: Prisma.FieldRef<'Preset', 'DateTime'>
	readonly updatedAt: Prisma.FieldRef<'Preset', 'DateTime'>
	readonly usedAt: Prisma.FieldRef<'Preset', 'DateTime'>
}

// Custom InputTypes
/**
 * Preset findUnique
 */
export type PresetFindUniqueArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Preset
	 */
	select?: Prisma.PresetSelect<ExtArgs> | null
	/**
	 * Omit specific fields from the Preset
	 */
	omit?: Prisma.PresetOmit<ExtArgs> | null
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.PresetInclude<ExtArgs> | null
	/**
	 * Filter, which Preset to fetch.
	 */
	where: Prisma.PresetWhereUniqueInput
}
/**
 * Preset findUniqueOrThrow
 */
export type PresetFindUniqueOrThrowArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Preset
	 */
	select?: Prisma.PresetSelect<ExtArgs> | null
	/**
	 * Omit specific fields from the Preset
	 */
	omit?: Prisma.PresetOmit<ExtArgs> | null
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.PresetInclude<ExtArgs> | null
	/**
	 * Filter, which Preset to fetch.
	 */
	where: Prisma.PresetWhereUniqueInput
}
/**
 * Preset findFirst
 */
export type PresetFindFirstArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Preset
	 */
	select?: Prisma.PresetSelect<ExtArgs> | null
	/**
	 * Omit specific fields from the Preset
	 */
	omit?: Prisma.PresetOmit<ExtArgs> | null
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.PresetInclude<ExtArgs> | null
	/**
	 * Filter, which Preset to fetch.
	 */
	where?: Prisma.PresetWhereInput
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of Presets to fetch.
	 */
	orderBy?:
		| Prisma.PresetOrderByWithRelationInput
		| Prisma.PresetOrderByWithRelationInput[]
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for searching for Presets.
	 */
	cursor?: Prisma.PresetWhereUniqueInput
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` Presets from the position of the cursor.
	 */
	take?: number
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` Presets.
	 */
	skip?: number
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
	 *
	 * Filter by unique combinations of Presets.
	 */
	distinct?: Prisma.PresetScalarFieldEnum | Prisma.PresetScalarFieldEnum[]
}
/**
 * Preset findFirstOrThrow
 */
export type PresetFindFirstOrThrowArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Preset
	 */
	select?: Prisma.PresetSelect<ExtArgs> | null
	/**
	 * Omit specific fields from the Preset
	 */
	omit?: Prisma.PresetOmit<ExtArgs> | null
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.PresetInclude<ExtArgs> | null
	/**
	 * Filter, which Preset to fetch.
	 */
	where?: Prisma.PresetWhereInput
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of Presets to fetch.
	 */
	orderBy?:
		| Prisma.PresetOrderByWithRelationInput
		| Prisma.PresetOrderByWithRelationInput[]
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for searching for Presets.
	 */
	cursor?: Prisma.PresetWhereUniqueInput
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` Presets from the position of the cursor.
	 */
	take?: number
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` Presets.
	 */
	skip?: number
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
	 *
	 * Filter by unique combinations of Presets.
	 */
	distinct?: Prisma.PresetScalarFieldEnum | Prisma.PresetScalarFieldEnum[]
}
/**
 * Preset findMany
 */
export type PresetFindManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Preset
	 */
	select?: Prisma.PresetSelect<ExtArgs> | null
	/**
	 * Omit specific fields from the Preset
	 */
	omit?: Prisma.PresetOmit<ExtArgs> | null
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.PresetInclude<ExtArgs> | null
	/**
	 * Filter, which Presets to fetch.
	 */
	where?: Prisma.PresetWhereInput
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of Presets to fetch.
	 */
	orderBy?:
		| Prisma.PresetOrderByWithRelationInput
		| Prisma.PresetOrderByWithRelationInput[]
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for listing Presets.
	 */
	cursor?: Prisma.PresetWhereUniqueInput
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` Presets from the position of the cursor.
	 */
	take?: number
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` Presets.
	 */
	skip?: number
	distinct?: Prisma.PresetScalarFieldEnum | Prisma.PresetScalarFieldEnum[]
}
/**
 * Preset create
 */
export type PresetCreateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Preset
	 */
	select?: Prisma.PresetSelect<ExtArgs> | null
	/**
	 * Omit specific fields from the Preset
	 */
	omit?: Prisma.PresetOmit<ExtArgs> | null
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.PresetInclude<ExtArgs> | null
	/**
	 * The data needed to create a Preset.
	 */
	data: Prisma.XOR<
		Prisma.PresetCreateInput,
		Prisma.PresetUncheckedCreateInput
	>
}
/**
 * Preset createMany
 */
export type PresetCreateManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The data used to create many Presets.
	 */
	data: Prisma.PresetCreateManyInput | Prisma.PresetCreateManyInput[]
	skipDuplicates?: boolean
}
/**
 * Preset createManyAndReturn
 */
export type PresetCreateManyAndReturnArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Preset
	 */
	select?: Prisma.PresetSelectCreateManyAndReturn<ExtArgs> | null
	/**
	 * Omit specific fields from the Preset
	 */
	omit?: Prisma.PresetOmit<ExtArgs> | null
	/**
	 * The data used to create many Presets.
	 */
	data: Prisma.PresetCreateManyInput | Prisma.PresetCreateManyInput[]
	skipDuplicates?: boolean
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.PresetIncludeCreateManyAndReturn<ExtArgs> | null
}
/**
 * Preset update
 */
export type PresetUpdateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Preset
	 */
	select?: Prisma.PresetSelect<ExtArgs> | null
	/**
	 * Omit specific fields from the Preset
	 */
	omit?: Prisma.PresetOmit<ExtArgs> | null
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.PresetInclude<ExtArgs> | null
	/**
	 * The data needed to update a Preset.
	 */
	data: Prisma.XOR<
		Prisma.PresetUpdateInput,
		Prisma.PresetUncheckedUpdateInput
	>
	/**
	 * Choose, which Preset to update.
	 */
	where: Prisma.PresetWhereUniqueInput
}
/**
 * Preset updateMany
 */
export type PresetUpdateManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The data used to update Presets.
	 */
	data: Prisma.XOR<
		Prisma.PresetUpdateManyMutationInput,
		Prisma.PresetUncheckedUpdateManyInput
	>
	/**
	 * Filter which Presets to update
	 */
	where?: Prisma.PresetWhereInput
	/**
	 * Limit how many Presets to update.
	 */
	limit?: number
}
/**
 * Preset updateManyAndReturn
 */
export type PresetUpdateManyAndReturnArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Preset
	 */
	select?: Prisma.PresetSelectUpdateManyAndReturn<ExtArgs> | null
	/**
	 * Omit specific fields from the Preset
	 */
	omit?: Prisma.PresetOmit<ExtArgs> | null
	/**
	 * The data used to update Presets.
	 */
	data: Prisma.XOR<
		Prisma.PresetUpdateManyMutationInput,
		Prisma.PresetUncheckedUpdateManyInput
	>
	/**
	 * Filter which Presets to update
	 */
	where?: Prisma.PresetWhereInput
	/**
	 * Limit how many Presets to update.
	 */
	limit?: number
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.PresetIncludeUpdateManyAndReturn<ExtArgs> | null
}
/**
 * Preset upsert
 */
export type PresetUpsertArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Preset
	 */
	select?: Prisma.PresetSelect<ExtArgs> | null
	/**
	 * Omit specific fields from the Preset
	 */
	omit?: Prisma.PresetOmit<ExtArgs> | null
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.PresetInclude<ExtArgs> | null
	/**
	 * The filter to search for the Preset to update in case it exists.
	 */
	where: Prisma.PresetWhereUniqueInput
	/**
	 * In case the Preset found by the `where` argument doesn't exist, create a new Preset with this data.
	 */
	create: Prisma.XOR<
		Prisma.PresetCreateInput,
		Prisma.PresetUncheckedCreateInput
	>
	/**
	 * In case the Preset was found with the provided `where` argument, update it with this data.
	 */
	update: Prisma.XOR<
		Prisma.PresetUpdateInput,
		Prisma.PresetUncheckedUpdateInput
	>
}
/**
 * Preset delete
 */
export type PresetDeleteArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Preset
	 */
	select?: Prisma.PresetSelect<ExtArgs> | null
	/**
	 * Omit specific fields from the Preset
	 */
	omit?: Prisma.PresetOmit<ExtArgs> | null
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.PresetInclude<ExtArgs> | null
	/**
	 * Filter which Preset to delete.
	 */
	where: Prisma.PresetWhereUniqueInput
}
/**
 * Preset deleteMany
 */
export type PresetDeleteManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Filter which Presets to delete
	 */
	where?: Prisma.PresetWhereInput
	/**
	 * Limit how many Presets to delete.
	 */
	limit?: number
}
/**
 * Preset.Models
 */
export type Preset$ModelsArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the PresetModel
	 */
	select?: Prisma.PresetModelSelect<ExtArgs> | null
	/**
	 * Omit specific fields from the PresetModel
	 */
	omit?: Prisma.PresetModelOmit<ExtArgs> | null
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.PresetModelInclude<ExtArgs> | null
	where?: Prisma.PresetModelWhereInput
	orderBy?:
		| Prisma.PresetModelOrderByWithRelationInput
		| Prisma.PresetModelOrderByWithRelationInput[]
	cursor?: Prisma.PresetModelWhereUniqueInput
	take?: number
	skip?: number
	distinct?:
		| Prisma.PresetModelScalarFieldEnum
		| Prisma.PresetModelScalarFieldEnum[]
}
/**
 * Preset.User
 */
export type Preset$UserArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the User
	 */
	select?: Prisma.UserSelect<ExtArgs> | null
	/**
	 * Omit specific fields from the User
	 */
	omit?: Prisma.UserOmit<ExtArgs> | null
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.UserInclude<ExtArgs> | null
	where?: Prisma.UserWhereInput
}
/**
 * Preset.Analysis
 */
export type Preset$AnalysisArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Analysis
	 */
	select?: Prisma.AnalysisSelect<ExtArgs> | null
	/**
	 * Omit specific fields from the Analysis
	 */
	omit?: Prisma.AnalysisOmit<ExtArgs> | null
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.AnalysisInclude<ExtArgs> | null
	where?: Prisma.AnalysisWhereInput
	orderBy?:
		| Prisma.AnalysisOrderByWithRelationInput
		| Prisma.AnalysisOrderByWithRelationInput[]
	cursor?: Prisma.AnalysisWhereUniqueInput
	take?: number
	skip?: number
	distinct?: Prisma.AnalysisScalarFieldEnum | Prisma.AnalysisScalarFieldEnum[]
}
/**
 * Preset without action
 */
export type PresetDefaultArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Preset
	 */
	select?: Prisma.PresetSelect<ExtArgs> | null
	/**
	 * Omit specific fields from the Preset
	 */
	omit?: Prisma.PresetOmit<ExtArgs> | null
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.PresetInclude<ExtArgs> | null
}
